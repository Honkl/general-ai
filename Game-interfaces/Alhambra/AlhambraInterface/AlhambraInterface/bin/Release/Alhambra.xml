<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Alhambra</name>
    </assembly>
    <members>
        <member name="T:Alhambra.AIEnumerator">
            <summary>
            Can return the specified number of instances of derived IArtificialIntelligence classes.
            </summary>
        </member>
        <member name="M:Alhambra.AIEnumerator.#ctor(System.Int32,Alhambra.Game)">
            <summary>
            Initializes a new instance of 'Alhambra.AIEnumerator'.
            </summary>
            <param name="numberOfItems">Indicates the number of items that will be needed.</param>
            <param name="game">An instance of 'Alhambra.Game' to be associated with AIs.</param>
        </member>
        <member name="P:Alhambra.AIEnumerator.Current">
            <summary>
            Gets the current element in the collection.
            </summary>
        </member>
        <member name="M:Alhambra.AIEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>True if next position in the collection is available.</returns>
        </member>
        <member name="M:Alhambra.AIEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.   
            </summary>
        </member>
        <member name="M:Alhambra.AIEnumerator.InitializeIntelligences">
            <summary>
            Initializes artificial intelligences.
            </summary>
        </member>
        <member name="T:Alhambra.AIWeighedMoves">
            <summary>
            Implements the weights on which the artificial intelligence decides next move to play.
            </summary>
        </member>
        <member name="F:Alhambra.AIWeighedMoves.NumberOfMethods">
            <summary>
            Number of methods/criteria on which AI makes decisions.
            </summary>
        </member>
        <member name="F:Alhambra.AIWeighedMoves.NumberOfWeights">
            <summary>
            Number of weights on which AI makes decisions (for every part
            among scoring rounds we have different weights).
            </summary>
        </member>
        <member name="F:Alhambra.AIWeighedMoves.MaxCardsToTakeLimit">
            <summary>
            Indicates the maximum number of cards that the current AI can take,
            if some other type of move is available.
            </summary>
        </member>
        <member name="F:Alhambra.AIWeighedMoves.MaxRebuildsInRowLimit">
            <summary>
            Indicates the maximum number of rebuild-moves, that can the current
            AI do in a row (if some other type of move is available).
            </summary>
        </member>
        <member name="F:Alhambra.AIWeighedMoves.methods">
            <summary>
            Methods to determine properties of the move or a state of the game.
            </summary>
        </member>
        <member name="T:Alhambra.AIWeighedMoves.TypeOfRebuildMove">
            <summary>
            Types of rebuild move - ToAlhambra, ToStorage, Swap.
            </summary>
        </member>
        <member name="T:Alhambra.AIWeighedMoves.CriteriaProperties">
            <summary>
            Contains static arrays that specifies indices of given methods.
            </summary>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.CriteriaProperties.#cctor">
            <summary>
            Static constructor initializes arrays for criteria (also called when game is deserialized).
            </summary>
        </member>
        <member name="P:Alhambra.AIWeighedMoves.Weights">
            <summary>
            Based on these weights, the AI will make a decisions.
            </summary>
        </member>
        <member name="P:Alhambra.AIWeighedMoves.RepresentedPlayer">
            <summary>
            Player who is played by the current 'Alhambra.AIWeighedMoves' instance.
            </summary>
        </member>
        <member name="P:Alhambra.AIWeighedMoves.InitializedFromFileSuccessfully">
            <summary>
            Indicates whether the current instance of 'Alhambra.AIWeighedMoves'
            were initialized from file succesfully.
            </summary>
        </member>
        <member name="F:Alhambra.AIWeighedMoves.checker">
            <summary>
            An instance of 'Alhambra.MoveChecker' used to determine move correctness.
            </summary>
        </member>
        <member name="F:Alhambra.AIWeighedMoves.rebuildInRow">
            <summary>
            Represents a number of Rebuild moves in a row.
            </summary>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.#ctor(Alhambra.Game)">
            <summary>
            Initializes a new instance of Alhambra.AIWeighedMoves. This instance has no weights yet.
            </summary>
            <param name="game">An instance of 'Alhambra.Game' where the game will be played.</param>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.Initialize">
            <summary>
            Initializes the current instance of 'Alhambra.AIWeighedMoves'.
            </summary>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.InitializeWeights">
            <summary>
            Initializes Weights of the current artificial intelligence.
            </summary>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.ParseFile(System.String)">
            <summary>
            Parses file with weights and returns them.
            </summary>
            <returns>Array of weights for specified number of players.</returns>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.GetStringColorForFileName(System.Drawing.Color)">
            <summary>
            Gets a string representation of the specified color. This string is not
            based on resource files, because these strings are not connected to any
            language. They are only in names of files.
            </summary>
            <param name="color">A color to be translated.</param>
            <returns>A string representation of the specified color. Used in file name.</returns>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.InitializeWeightsRandom">
            <summary>
            Initializes Weights of current artificial intelligence randomly.
            </summary>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.GetSolution">
            <summary>
            Evaluates and selects move to player.
            </summary>
            <returns>Instance of child class of Move.</returns>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.GetPositionForFreeBuilding(Alhambra.Building)">
            <summary>
            Returns a position for a free building. This building can be obtained at the end of the game.
            </summary>
            <param name="toBeAccepted"></param>
            <returns>A position for the building obtained at the end of the game.</returns>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.GetSumOfWeights(System.Int32[],System.Object)">
            <summary>
            Evaluates sum of appropriate weights computed by a specified methods.
            </summary>
            <param name="criteriaArray">Indices of methods that will be called.</param>
            <param name="argumentForMethod">Argument to computational methods.</param>
            <returns>Evaluated sum of appropriate weights.</returns>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.GetMoveTypeToPlay">
            <summary>
            Selects the type of move player should play. Determines among TakeCardMove,
            BuyBuildingMove and RebuildMove.
            </summary>
            <returns>One of types - TakeCardMove, BuyBuildingMove, RebuildMove.</returns>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.GetCardsToTake">
            <summary>
            Computes a good selection of cards to take.
            </summary>
            <returns>List of cards that should be taken in Take-card move.</returns>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.GetBuildingToBuy(Alhambra.CardType@)">
            <summary>
            Computes a good selection of building to buy.
            </summary>
            <param name="typeForPurchase">Parameter will be filed with a CardType needed to purchase
            selected building.</param>
            <returns>Building to be selected to buy.</returns>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.GetCardsToPurchaseBuilding(Alhambra.Building,Alhambra.CardType)">
            <summary>
            Computes a good selection of cards to be purchased for a specified building.
            </summary>
            <param name="toBePurchased">Building that will be purhased.</param>
            <param name="expectedType">CardType that is used for cards to purchase the specified building.</param>
            <returns></returns>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.SolveBuildingPosition(Alhambra.Building@,System.Collections.Generic.List{Alhambra.Building})">
            <summary>
            To building specified by the parameter will enter position for game map.
            </summary>
            <param name="building">Building to be positioned.</param>
            <param name="fromPreviousMove">List of buildings that have been modified in previous move.</param>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.ResolvePositionsForRebuild(Alhambra.RebuildMove@)">
            <summary>
            Sets a position of the specified building (used during rebuild move).
            </summary>
            <param name="rm">A building to have set position.</param>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.GetPositionForBuilding(Alhambra.Building,System.Collections.Generic.List{Alhambra.Building},System.Boolean,System.Boolean)">
            <summary>
            Computes a good position for the specified building by parameter.
            </summary>
            <param name="toBePositioned">Sets buildings position.</param>
            <param name="alreadyPositioned">List of already positioned buildings from previous move or moves.</param>
            <param name="alsoGenerPosInStorage">Determines whether the function will generate position for storage (Position.None).</param>
            <param name="alsoGenerPosForImag">Determines whether the function will generace position for imaginary player (Position.Imaginary).</param>
            <returns>Position for the specified building.</returns>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.GetNewBoundsOfMap(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Fill parameters with the new bounds of rectangle created by player's 'topLeft' and 'bottomRight' positions.
            </summary>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.SetBuildingProperties(Alhambra.Building,Alhambra.Position)">
            <summary>
            Sets building position to the specific position. If position is None (building
            is postponed), InStorage property will also be set.
            </summary>
            <param name="building">A building to be positioned.</param>
            <param name="positionToSet">A position for the building.</param>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.GetTypeOfRebuildMove">
            <summary>
            Based on a quality, select which Rebuild move type will be selected.
            </summary>
            <returns>'Alhambra.TypeOfRebuildMove' selection.</returns>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.CanMakeToAlhambraRebuild">
            <summary>
            Checks if is possible to make a Rebuild move with adding building to Alhambra (only).
            </summary>
            <returns>True if is possible to make a Rebuild move with adding building to Alhambra.</returns>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.CanMakeToStorageRebuild">
            <summary>
            Checks if is possible to make a Rebuild move with adding building from Alhambra to storage (only).
            </summary>
            <returns>True if is possible to make a Rebuild move with adding building from Alhambra to storage.</returns>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.CanMakeSwapRebuild">
            <summary>
            Checks if is possible to make a Rebuild move with swapping two buildings.
            </summary>
            <returns>True, if is possible to make a Rebuild move with swapping two buildings.</returns>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.GetBuildingToAlhambra">
            <summary>
            Computes a good selecting of building which will be placed to Alhambra from storage. This method
            also computes a position for the building.
            </summary>
            <returns>Instance of Building which will be placed to Alhambra.</returns>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.GetBuildingToStorage">
            <summary>
            Computes a good selecting of building which will be placed from Alhambra to storage. This method
            also computes a position for the building.
            </summary>
            <returns>Instance of Building which will be placed to Alhambra.</returns>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.GetBuildingForSwap(Alhambra.Building@,Alhambra.Building@)">
            <summary>
            Computes which buildings will be selected for Rebuild - swap - move.
            </summary>
            <param name="toAlhambra">Parameter will be filled with a building to Alhambra in Rebuild move.</param>
            <param name="toStorage">Parameter will be filled with a building to Storage in Rebuild move.</param>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.InitializeMethods">
            <summary>
            Initializes methods for evaluatin criteria.
            </summary>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.TakingColorOfLargestSum(System.Object)">
            <summary>
            Computes the sum of values of each card type in player owned cards. Determines if
            some of cards specified by parameter are of this the most often type.
            </summary>
            <param name="listOfCards">Must has type of List&lt;Card&gt;. Represents list of cards to take.</param>
            <returns>True if any of cards specified by parameter has same type as type with
            the largest sum of values.</returns>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.CanMakeSameCount(System.Object)">
            <summary>
            Evaluates whether the player can make same amount of buildings of any color (against to other player) 
            by taking building specified by the parameter. The player with more buildings of the specified color
            must be the first, the second, or the third in amount of these buildings against another player.
            </summary>
            <param name="building">Must be type of Building.</param>
            <returns>True if the player can make same amount of buildings of any color.</returns>
        </member>
        <member name="F:Alhambra.AIWeighedMoves._toBePlaced">
            <summary>
            Used in 'IncreaseWallBy' methods.
            </summary>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.AlhambraWillNotBeComplBounded(System.Object)">
            <summary>
            Evaluates whether the player will have completely bounded Alhambra
            after adding building to specified position. 
            </summary>
            <param name="position">A position where the building will be placed</param>
            <returns>True if after placing the specified building player gets
            completely bounded Alhambra with walls.</returns>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.GiveToImaginaryAndMakeSameCount(System.Object)">
            <summary>
            Returns true if player can give a building to imaginary player and the count of buildings
            (of the actual type) will be the same as different player's and final scoring round is near.
            </summary>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.CanTakeEnoughCards_Internal(System.Boolean@)">
            <summary>
            Returns true if the current player can take enough cards to purchase a new building;
            otherwise false (if player has already been albe to buy the specified building
            before taking any card, also false!).
            </summary>
            <param name="isOverPaid">True if player can take enough cards to purchase a new
            building and building is not overpaid.</param>
            <returns>True if the current player can take enough cards to purchase a new
            building.</returns>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.CanTakeCardOfValue_Internal(System.Int32)">
            <summary>
            Determines whether the current player can take card of the specified value.
            </summary>
            <param name="value">Value of the card to be taken.</param>
            <returns>True if the current player can take card of the specified value.</returns>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.CanBuyBuilding_Internal(Alhambra.BuildingType)">
            <summary>
            Determines whether the current player can purchase a new building of the specified BuildingType.
            </summary>
            <param name="color">A BuildingType to be taken.</param>
            <returns>True if the current player can purchase a new building of the specified BuildingType.</returns>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.HasComplBoundedAlh_Internal(Alhambra.Building)">
            <summary>
            True if player has completely bounded Alhambra with walls.
            </summary>
            <param name="toBeAdded">A building to be placed in Alhambra, or null.</param>
            <returns>True if player has completely bounded Alhambra with walls.</returns>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.CanBuyNewBuildingAfter(System.Collections.Generic.List{Alhambra.Card})">
            <summary>
            Evaluates whether player will be available to buy new building after taking
            cards specified by parameter. Returns false if all buildings which can
            be bought by player are available to buy before taking the specified set of cards.
            </summary>
            <param name="cardsToTake">Cards to take.</param>
            <returns>True if player can buy new building after taking the specified set of cards.</returns>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.CanBuyNewBldAfterExact(System.Collections.Generic.List{Alhambra.Card})">
            <summary>
            Evaluates whether player will be available to buy new building after taking
            cards specified by parameter, without over paid. Returns false,
            if all buildings which can be bought by player (without over paid) are available 
            to buy before taking the specified set of cards.
            </summary>
            <param name="cardsToTake">Cards to take.</param>
            <returns>True if after taking the specified cards player will be available to purchase a new building without over paid.</returns>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.HasColor(Alhambra.Building,Alhambra.BuildingType)">
            <summary>
            Determines if the specified building has a correct BuildingType.
            </summary>
            <returns>True if the specified building has same type as the specified BuildingType.</returns>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.HasDifference(Alhambra.Building,System.Int32)">
            <summary>
            Evaluates if difference in a number of buildings of specified color is exactly the same as a 'differenceSize' parameter.
            </summary>
            <param name="toBuy">Evaluating the number of specified buildings by type of this building.</param>
            <param name="differenceSize">Determines the difference in a number of specified buildings.</param>
            <returns>True, if some player has a number of buildings of a certain type specified by parameters.</returns>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.OverPaidBy_Internal(System.Collections.Generic.List{Alhambra.Card})">
            <summary>
            Evaluates how much is 'toBePurchased' building over paid.
            </summary>
            <param name="cards">Cards used for the purchase of the building.</param>
            <returns>Value indicating how much is the specific building over paid.</returns>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.FindChangeOfWallLength(Alhambra.Building,System.Boolean)">
            <summary>
            Evaluates a new length of the longest wall around the player's Alhambra, using
            the building specified by the parameter. Based of isRemoving parameter method will compute
            the longest wall after adding the building or after removing the building.
            </summary>
            <param name="toPlaceOrRemove">Based on this building will be evaluated a new length of the 
            longest wall around the Alhambra.</param>
            <param name="isRemoving">If true, method evaluates the longest wall around player's Alhambra after removing
            the building instead off adding it.</param>
            <returns>A length change of the longest wall around the Alhambra 
            after placing or removing the specified building.</returns>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.GetNumberOfWallsOfBuilding(Alhambra.Building)">
            <summary>
            Returns a number of walls around the specified building.
            </summary>
            <param name="building">A building which walls will be detected.</param>
            <returns>A number of walls around the specified building.</returns>
        </member>
        <member name="M:Alhambra.AIWeighedMoves.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Alhambra.WeightsStorage">
            <summary>
            Holds results of evolution genetic algorithm.
            </summary>
        </member>
        <member name="P:Alhambra.WeightsStorage.WeightsForTwo">
            <summary>
            Gets the array that holds weights for criteria for game with two players.
            </summary>
        </member>
        <member name="P:Alhambra.WeightsStorage.WeightsForThree">
            <summary>
            Gets the array that holds weights for criteria for game with three players.
            </summary>
        </member>
        <member name="P:Alhambra.WeightsStorage.WeightsForFour">
            <summary>
            Gets the array that holds weights for criteria for game with four players. 
            </summary>
        </member>
        <member name="P:Alhambra.WeightsStorage.WeightsForFive">
            <summary>
            Gets the array that holds weights for criteria for game with five players.
            </summary>
        </member>
        <member name="P:Alhambra.WeightsStorage.WeightsForSix">
            <summary>
            Gets the array that holds weights for criteria for game with six players.
            </summary>
        </member>
        <member name="T:Alhambra.AlhambraException">
            <summary>
            Exception thrown in the Alhambra game.
            </summary>
        </member>
        <member name="M:Alhambra.AlhambraException.#ctor">
            <summary>
            Initializes a new instance of 'Alhambra.AlhambraException'.
            </summary>
        </member>
        <member name="M:Alhambra.AlhambraException.#ctor(System.String)">
            <summary>
            Initializes a new instance of 'Alhambra.AlhambraException' with addional message.
            </summary>
            <param name="message">An addional message.</param>
        </member>
        <member name="P:Alhambra.AlhambraException.Message">
            <summary>
            Gets a message that describes the current 'AlhambraException'.
            </summary>
        </member>
        <member name="T:Alhambra.IArtificialIntelligence">
            <summary>
            Declares basic behaviour and methods for every artificial intelligence for Alhambra game.
            </summary>
        </member>
        <member name="P:Alhambra.IArtificialIntelligence.RepresentedPlayer">
            <summary>
            Player who is played by the current artificial intelligence instance.
            </summary>
        </member>
        <member name="M:Alhambra.IArtificialIntelligence.Initialize">
            <summary>
            Initializes the current instance;
            </summary>
        </member>
        <member name="M:Alhambra.IArtificialIntelligence.GetSolution">
            <summary>
            Evaluate a move which will be used as a move of round.
            </summary>
            <returns>Generated move to be used.</returns>
        </member>
        <member name="M:Alhambra.IArtificialIntelligence.GetPositionForFreeBuilding(Alhambra.Building)">
            <summary>
            Gets a position for the specified building.
            </summary>
            <param name="toBeAccepted">A building to be positioned.</param>
            <returns>A position for the specified building.</returns>
        </member>
        <member name="T:Alhambra.Building">
            <summary>
            Instances represents buildings of a real game.
            </summary>
        </member>
        <member name="P:Alhambra.Building.IsInStorage">
            <summary>
            Determines whether building is in storage (postponed).
            </summary>
        </member>
        <member name="P:Alhambra.Building.Walls">
            <summary>
            Bool array of length equal to four; Indicates walls around the building (clockwise, top-right-bottom-left).
            </summary>
        </member>
        <member name="P:Alhambra.Building.Type">
            <summary>
            Type of the building.
            </summary>
        </member>
        <member name="P:Alhambra.Building.Position">
            <summary>
            Position of the building.
            </summary>
        </member>
        <member name="P:Alhambra.Building.Value">
            <summary>
            value of the building.
            </summary>
        </member>
        <member name="M:Alhambra.Building.#ctor(Alhambra.BuildingType,Alhambra.Position,System.Boolean[],System.Int32,System.Boolean)">
            <summary>
            Initializes new instance of Alhambra.Building.
            </summary>
            <param name="type">Type of the building.</param>
            <param name="position">Position of the building.</param>
            <param name="walls">Bool array of length equal to four;
            Indicates walls around the building (clockwise, top-right-bottom-left).</param>
            <param name="value">Value of the building (price).</param>
            <param name="isInStorage">Determines whether building is in storage (postponed).</param>
        </member>
        <member name="M:Alhambra.Building.Clone">
            <summary>
            Creates a new 'Alhambra.Building' object with the same values as the current object.
            </summary>
            <returns>A new 'Alhambra.Building' object with the same values as the current object.</returns>
        </member>
        <member name="M:Alhambra.Building.ToString">
            <summary>
            String represenatiton of the building.
            </summary>
            <returns>String representation of the building.</returns>
        </member>
        <member name="M:Alhambra.Building.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to current building (except building position).
            </summary>
            <param name="obj">The object to compare with the current building.</param>
            <returns>True if the specified object is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:Alhambra.Building.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            A hash code for the current object. 
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="T:Alhambra.BuildingsTablePanelCC">
            <summary>
            Graphically shows the Alhambra game properties - numbers of buildings for each color.
            </summary>
        </member>
        <member name="M:Alhambra.BuildingsTablePanelCC.#ctor(Alhambra.Game,System.Int32)">
            <summary>
            Initializes a new instance of 'Alhambra.BuildingsTablePanelCC'.
            </summary>
            <param name="game">A game where this panel looks for data.</param>
            <param name="width">Width for this panel.</param>
        </member>
        <member name="M:Alhambra.BuildingsTablePanelCC.InitializeItems">
            <summary>
            Initializes items and values.
            </summary>
        </member>
        <member name="M:Alhambra.BuildingsTablePanelCC.CreateEmptyLabel">
            <summary>
            Creates and returns empty label with specific properties.
            </summary>
            <returns>An empty label with specific properties.</returns>
        </member>
        <member name="M:Alhambra.BuildingsTablePanelCC.GetPictureBoxForBuildingType(Alhambra.BuildingType)">
            <summary>
            Creates and returns a new picture box representing the specified building type.
            </summary>
            <param name="bt">A building type to be represented.</param>
            <returns>A new picture box representing the specified building type.</returns>
        </member>
        <member name="F:Alhambra.BuildingsTablePanelCC.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Alhambra.BuildingsTablePanelCC.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Alhambra.BuildingsTablePanelCC.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Alhambra.CardCC">
            <summary>
            Grafically represents a card in the Alhambra game.
            </summary>
        </member>
        <member name="P:Alhambra.CardCC.AlreadyUsedForPurchase">
            <summary>
            True if card was used for purchasing a building, but still shown because player recieved new move.
            </summary>
        </member>
        <member name="P:Alhambra.CardCC.Represents">
            <summary>
            A card that is represented by current object.
            </summary>
        </member>
        <member name="P:Alhambra.CardCC.IsOnMarket">
            <summary>
            Determines whether this card control is in market.
            </summary>
        </member>
        <member name="M:Alhambra.CardCC.#ctor">
            <summary>
            Creates a new instance of 'Alhambra.CardCC', not fully initialized.
            </summary>
        </member>
        <member name="M:Alhambra.CardCC.#ctor(Alhambra.Card,System.Drawing.Image,System.Boolean)">
            <summary>
            Initializes new instance of 'Alhambra.CardCC'.
            </summary>
            <param name="card">Card that is represented by current control.</param>
            <param name="imgOfCard">Image of the card that is represented by current control.</param>
            <param name="isOnMarket">Determines whether card is in the market.</param>
        </member>
        <member name="M:Alhambra.CardCC.CardCC_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes mouse click event.
            </summary>
        </member>
        <member name="M:Alhambra.CardCC.BelongsTo(Alhambra.GameForm)">
            <summary>
            Set parent GameForm of the control.
            </summary>
            <param name="gameForm">New GameForm value (instance).</param>
        </member>
        <member name="M:Alhambra.CardCC.SetNewCard(Alhambra.Card)">
            <summary>
            Changes card that is represented by current control.
            </summary>
            <param name="c">New card to be represented.</param>
        </member>
        <member name="M:Alhambra.CardCC.SetEffect">
            <summary>
            Set a visual effect of the current control.
            </summary>
        </member>
        <member name="M:Alhambra.CardCC.ClearEffect">
            <summary>
            Cleares a visual effect of the current control.
            </summary>
        </member>
        <member name="M:Alhambra.CardCC.UnClick">
            <summary>
            Call represents un-click operation. Cleares a visual effect and set clicked flag to false.
            </summary>
        </member>
        <member name="M:Alhambra.CardCC.SetCrossEffect">
            <summary>
            Set a grayscale effect to the current control.
            </summary>
        </member>
        <member name="F:Alhambra.CardCC.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Alhambra.CardCC.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Alhambra.CardCC.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Alhambra.CodeStorage">
            <summary>
            Class has stored all buildings of Alhambra game.
            </summary>
        </member>
        <member name="F:Alhambra.CodeStorage.RectangleSize">
            <summary>
            Determines the size of one building image in pixels in resources.
            </summary>
        </member>
        <member name="M:Alhambra.CodeStorage.InitializeStorage">
            <summary>
            Creates objects of all buildings in game. 
            </summary>
        </member>
        <member name="M:Alhambra.CodeStorage.GetBuildingList">
            <summary>
            Returns list of all buildings within the game. Except Fountain type buildings.
            </summary>
        </member>
        <member name="M:Alhambra.CodeStorage.LinkToResources">
            <summary>
            Based on resources, fills and links correct building and card images to their ingame variable.
            Creates instances of 'Building' and 'Card'.
            </summary>
        </member>
        <member name="M:Alhambra.CodeStorage.AddLink(Alhambra.Building,System.Int32,System.Int32)">
            <summary>
            Creates link between Alhambra.Building instance and correct image in resources.
            </summary>
            <param name="b">A building to be linked.</param>
            <param name="row">A row of correct image in resource file allBuildings.jpg.</param>
            <param name="col">A column of correct image in resource file allBuildings.jpg.</param>
        </member>
        <member name="M:Alhambra.CodeStorage.SolveSortedCards(System.Collections.Generic.Queue{Alhambra.Card},System.Drawing.Bitmap)">
            <summary>
            Based on correct bitmap, cuts and separates cards and adds card-bitmap into 'cardBitmaps'.
            </summary>
            <param name="cards">Ordered queue of cards</param>
            <param name="allCards">Bitmap will be cut into pieces and creates pairs with 'Card' class instances.</param>
        </member>
        <member name="M:Alhambra.CodeStorage.GetImageOfBuilding(Alhambra.Building)">
            <summary>
            Looks into resources and returns an Image of buildings passed by parameter.
            </summary>
            <param name="b">Building whose image will be returned.</param>
            <returns>An Image of a specified building.</returns>
        </member>
        <member name="M:Alhambra.CodeStorage.GetImageOfCard(Alhambra.Card)">
            <summary>
            Returns an image of the specified Card. Not usable for cards of type Scoring.
            </summary>
            <param name="c">Card to be searched for.</param>
            <returns>An image of the specified Card.</returns>
        </member>
        <member name="T:Alhambra.BuyBuildingMove">
            <summary>
            Represents a specific buy-building move in Alhambra game.
            </summary>
        </member>
        <member name="P:Alhambra.BuyBuildingMove.IsOverPaid">
            <summary>
            Determines if the player over paid the bought building.
            </summary>
        </member>
        <member name="P:Alhambra.BuyBuildingMove.CardTypeToBuy">
            <summary>
            Determines 'Alhambra.CardType' that was used for purchase the bought building.
            </summary>
        </member>
        <member name="M:Alhambra.BuyBuildingMove.#ctor(System.Int32,Alhambra.Building,System.Collections.Generic.List{Alhambra.Card},Alhambra.CardType)">
            <summary>
            Initializes a new instance of 'Alhambra.BuyBuildingMove' representing the specific move.
            </summary>
            <param name="playerID">Player who owns current instance.</param>
            <param name="purchased">A purchased building.</param>
            <param name="cardsToPurchase">Cards used to purchase the specified building.</param>
            <param name="cardTypeToBuy">CardType used to purchase the specified building.</param>
        </member>
        <member name="M:Alhambra.BuyBuildingMove.SetOverPaid">
            <summary>
            Sets the correct value of IsOverPaid.
            </summary>
        </member>
        <member name="M:Alhambra.BuyBuildingMove.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Alhambra.Card">
            <summary>
            Represents a card in Alhambra game.
            </summary>
        </member>
        <member name="F:Alhambra.Card.MaxValue">
            <summary>
            Maximal value of one Alhambra game card.
            </summary>
        </member>
        <member name="F:Alhambra.Card.MinValue">
            <summary>
            Minimal value of one Alhambra game card.
            </summary>
        </member>
        <member name="F:Alhambra.Card.ScoringA">
            <summary>
            Represents A scoring card. This field is read only.
            </summary>
        </member>
        <member name="F:Alhambra.Card.ScoringB">
            <summary>
            Represents B scoring card. This field is read only.
            </summary>
        </member>
        <member name="P:Alhambra.Card.Type">
            <summary>
            Type of current card.
            </summary>
        </member>
        <member name="P:Alhambra.Card.Value">
            <summary>
            Value of current card.
            </summary>
        </member>
        <member name="M:Alhambra.Card.#ctor(Alhambra.CardType,System.Int32)">
            <summary>
            Initializes new structure of 'Alhambra.Card'.
            </summary>
            <param name="type">Type of new card.</param>
            <param name="value">Value of new card.</param>
        </member>
        <member name="M:Alhambra.Card.ToString">
            <summary>
            Returns a string that represents the current structure.
            </summary>
            <returns>A string that represents the current structure.</returns>
        </member>
        <member name="M:Alhambra.Card.op_Equality(Alhambra.Card,Alhambra.Card)">
            <summary>
            Determines whether structures are equal.
            </summary>
            <param name="c1">First structure to be compared.</param>
            <param name="c2">Second structure to be compared.</param>
            <returns>True if the specific structures are equal; otherwise false.</returns>
        </member>
        <member name="M:Alhambra.Card.op_Inequality(Alhambra.Card,Alhambra.Card)">
            <summary>
            Determines whether structures are not equal.
            </summary>
            <param name="c1">First structure to be compared.</param>
            <param name="c2">Second structure to be compared.</param>
            <returns>True if the specific structures are not equal; otherwise false.</returns>
        </member>
        <member name="M:Alhambra.Card.Equals(System.Object)">
            <summary>
            Indicates whether the structure and the specified object are equal.
            </summary>
            <param name="obj">Object to compare to.</param>
            <returns>True if current structure and the specified object are equal.</returns>
        </member>
        <member name="M:Alhambra.Card.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="T:Alhambra.CardType">
            <summary>
            Represents type of card in Alhambra game.
            </summary>
        </member>
        <member name="T:Alhambra.BuildingType">
            <summary>
            Represents type of building in Alhambra game.
            </summary>
        </member>
        <member name="T:Alhambra.Controller">
            <summary>
            The main control unit of the game.
            </summary>
        </member>
        <member name="F:Alhambra.Controller.scoreCountingRound">
            <summary>
            Determines the next score round.
            </summary>
        </member>
        <member name="F:Alhambra.Controller.players">
            <summary>
            Contains all players within the current game.
            </summary>
        </member>
        <member name="F:Alhambra.Controller.buildingsToImaginaryRound">
            <summary>
            Represents count of times when cards was given to imaginary player.
            </summary>
        </member>
        <member name="F:Alhambra.Controller.SubsetsLimit">
            <summary>
            Limit for maximum of subsets that will be generated.
            </summary>
        </member>
        <member name="M:Alhambra.Controller.#ctor">
            <summary>
            Creates new Controller object. This Controller is not fully initialized.
            Used for loading new game (deserialize).
            </summary>
        </member>
        <member name="M:Alhambra.Controller.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of 'Alhambra.Controller'.
            </summary>
            <param name="numberOfPlayers">Number of players within the game.</param>
        </member>
        <member name="M:Alhambra.Controller.#ctor(System.Int32,System.Random)">
            <summary>
            Initializes a new instance of 'Alhambra.Controller'.
            </summary>
            <param name="numberOfPlayers">Number of players within the game.</param>
            <param name="rnd">Instance of random generator used for initialization of the game.</param>
        </member>
        <member name="M:Alhambra.Controller.ExecuteNewMove">
            <summary>
            Start main loop, calls Alhambra.Player.Play method for each of players. If player is real, waits for GUI events.
            </summary>
        </member>
        <member name="M:Alhambra.Controller.CreatePlayers(System.Int32,System.Int32)">
            <summary>
            Creates a number of new player objects. All AI players will be created as a AIWeighedMove instances.
            </summary>
            <param name="realPlayers">Nummber of real players.</param>
            <param name="AIPlayers">Number of artificial intelligence players.</param>
        </member>
        <member name="M:Alhambra.Controller.CreatePlayer(System.Boolean,Alhambra.IArtificialIntelligence,System.Drawing.Color)">
            <summary>
            Creates and initializes new instance of player.
            </summary>
            <param name="isReal">True if player is real.</param>
            <param name="AI">An instance of the class implementing Artificial Intelligence methods.</param>
            <param name="color">Color of the player.</param>
        </member>
        <member name="M:Alhambra.Controller.EvaluatePoints">
            <summary>
            Evaluates new gained points for all players within game.
            </summary>
            <returns>Array of new gained points for every player.</returns>
        </member>
        <member name="M:Alhambra.Controller.GetPointsBasedOnBuildingType(System.Int32,System.Collections.Generic.List{System.Int32}[],Alhambra.BuildingType)">
            <summary>
            Based on 'scoreCountingRound' evaluates a point increment for the specified 'Alhambra.BuildingType'.
            </summary>
            <param name="size">Number of players (incl. imaginary player if necessary).</param>
            <param name="playerOrder">Order of players based on the number of building with the specified building type.</param>
            <param name="bt">An 'Alhambra.BuildingType' to be evaluated.</param>
            <returns>Increment of points for each players in view of the specified 'Alhambra.BuildingType'.</returns>
        </member>
        <member name="M:Alhambra.Controller.GetSortedBuildingsCount(Alhambra.BuildingType)">
            <summary>
            Evaluates and sorts for each player the number of buildings of the specified type. Tuples are &lt;PlayerID,BuildingCount&gt;.
            Array is DSC by buildings count (Item2 in tuples).
            </summary>
            <param name="bt">A building type to be counted.</param>
            <returns>Sorted numbers of the specified building type.</returns>
        </member>
        <member name="M:Alhambra.Controller.DivideByOrZero(System.Int32,System.Int32)">
            <summary>
            Divides dividend by divisor or zero when divisor equals zero.
            </summary>
            <returns>Dividend divided by divisor or zero.</returns>
        </member>
        <member name="T:Alhambra.Controller.BySecondElementDSCComparer">
            <summary>
            Comparer used for two int-Tuples. Comparing by second integer in descending order.
            </summary>
        </member>
        <member name="M:Alhambra.Controller.BySecondElementDSCComparer.Compare(System.Tuple{System.Int32,System.Int32},System.Tuple{System.Int32,System.Int32})">
            <summary>
            Compares two specified tuples.
            </summary>
            <param name="x">First tuple to be compared.</param>
            <param name="y">Second tuple to be compared.</param>
            <returns>-1 when x &lt; y; 0 when x = y; 1 when x &gt; y.</returns>
        </member>
        <member name="M:Alhambra.Controller.CheckRestBuildings">
            <summary>
            Checks if some building remains on market. If neccessary, this building will be
            given to player with max. sum of card values of specific color (according to rules).
            </summary>
        </member>
        <member name="M:Alhambra.Controller.GiveBuildingsToImaginary">
            <summary>
            Based on actual round, imaginary player will receive a number of buildings.
            </summary>
        </member>
        <member name="M:Alhambra.Controller.SaveGame(System.IO.Stream)">
            <summary>
            Saves the game via binary serialization.
            </summary>
            <param name="stream">Stream where save the game.</param>
        </member>
        <member name="M:Alhambra.Controller.Serialize(System.IO.Stream)">
            <summary>
            Serializes instance of Controller (this).
            </summary>
            <param name="stream">Stream where serialize Controller.</param>
        </member>
        <member name="M:Alhambra.Controller.LoadGame(System.String)">
            <summary>
            Loads the saved game - deserializes Controller instance from a file.
            </summary>
            <param name="file">File to be deserialized.</param>
        </member>
        <member name="M:Alhambra.Controller.Deserialize(System.String)">
            <summary>
            Deserializes a Controller instance from a file.
            </summary>
            <param name="file">File to be deserialized.</param>
            <returns>Deserialized Controller instance.</returns>
        </member>
        <member name="M:Alhambra.Controller.CreateLog">
            <summary>
            Creates a log file by copying parameter data into new file.
            </summary>
        </member>
        <member name="M:Alhambra.Controller.HasToWriteLogs">
            <summary>
            Sets a value specifying that the game will create logs.
            </summary>
        </member>
        <member name="M:Alhambra.Controller.GetSubsets``1(System.Collections.Generic.List{``0})">
            <summary>
            Gets all subsets of specified set.
            </summary>
            <typeparam name="T">No restrictions for T.</typeparam>
            <param name="set">Set to find subsets.</param>
            <returns>List of all subsets.</returns>
        </member>
        <member name="M:Alhambra.Controller.TryGetSubsets``1(System.Collections.Generic.List{``0})">
            <summary>
            Tryes to get all subsets of specified set. If the number of subsets
            is greater than subset limit returns only some of the subsets plus subset
            containing all elements from the set.
            </summary>
            <typeparam name="T">No restriction for T.</typeparam>
            <param name="set">Set to find subsets.</param>
            <returns>List of subsets.</returns>
        </member>
        <member name="M:Alhambra.Controller.GetSubsetsInternal``1(System.Collections.Generic.List{``0},System.Boolean)">
            <summary>
            Returns a list of subsets of the specified set. The number of subsets
            depends on parameter.
            </summary>
            <typeparam name="T">Type of items in the specified set.</typeparam>
            <param name="set">Input set.</param>
            <param name="hasToLimit">Determines whether the method will be generate 
            all subsets of the specified set.</param>
            <returns>A list of subsets of the specified set.</returns>
        </member>
        <member name="T:Alhambra.DebugForm">
            <summary>
            Simple GUI for debugging purposes.
            </summary>
        </member>
        <member name="F:Alhambra.DebugForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Alhambra.DebugForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Alhambra.DebugForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Alhambra.DoubleBufferedPanel">
            <summary>
            Provides a panel that is double buffered.
            </summary>
        </member>
        <member name="M:Alhambra.DoubleBufferedPanel.#ctor">
            <summary>
            Initializes a new instance of Alhambra.DoubleBufferedPanel.
            </summary>
        </member>
        <member name="M:Alhambra.DoubleBufferedPanel.OnMouseEnter(System.EventArgs)">
            <summary>
            Raises the System.Windows.Forms.Control.MouseEnter event and set the focus to current DoubleBufferedPanel.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="F:Alhambra.DoubleBufferedPanel.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Alhambra.DoubleBufferedPanel.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Alhambra.DoubleBufferedPanel.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Alhambra.ExtensionsForEnums">
            <summary>
            Provides methods for localizable 'ToString' for Alhambra.BuildingType and Alhambra.CardType.
            </summary>
        </member>
        <member name="M:Alhambra.ExtensionsForEnums.ToLocalizedString(Alhambra.BuildingType)">
            <summary>
            Returns a localized string that represents the current BuildingType.
            </summary>
            <param name="bt">A BuildingType to be represented.</param>
            <returns>A localized string that represents the current BuildingType.</returns>
        </member>
        <member name="M:Alhambra.ExtensionsForEnums.ToLocalizedString(Alhambra.CardType)">
            <summary>
            Returns a localized string that represents the current CardType.
            </summary>
            <param name="ct">A CardType to be represented.</param>
            <returns>A localized string that represents the current CardType.</returns>
        </member>
        <member name="T:Alhambra.Game">
            <summary>
            Represents a whole game data and provides methods to modify them.
            </summary>
        </member>
        <member name="F:Alhambra.Game.package">
            <summary>
            Package of available cards.
            </summary>
        </member>
        <member name="F:Alhambra.Game.buildings">
            <summary>
            Unused buildings yet.
            </summary>
        </member>
        <member name="F:Alhambra.Game.unresolved">
            <summary>
            Buildings still in use (before ending of all moves in a row of the specified player).
            </summary>
        </member>
        <member name="F:Alhambra.Game.topLeft">
            <summary>
            Indicates the current position which is the most upper left relative to the built buildings of the player.
            </summary>
        </member>
        <member name="F:Alhambra.Game.bottomRight">
            <summary>
            Indicates the current position which is the most bottom right relative to the built buildings of the player.
            </summary>
        </member>
        <member name="F:Alhambra.Game.map">
            <summary>
            Map of the game.
            </summary>
        </member>
        <member name="F:Alhambra.Game.constructed">
            <summary>
            Constructed buildings of each player.
            </summary>
        </member>
        <member name="F:Alhambra.Game.postponed">
            <summary>
            Postponed buildings of each player.
            </summary>
        </member>
        <member name="F:Alhambra.Game.ownedCards">
            <summary>
            Owned cards of each player.
            </summary>
        </member>
        <member name="F:Alhambra.Game.order">
            <summary>
            Order of players.
            </summary>
        </member>
        <member name="F:Alhambra.Game.orderAtStart">
            <summary>
            Order of players at the start of the game.
            </summary>
        </member>
        <member name="F:Alhambra.Game.points">
            <summary>
            Points of each player reached during the game.
            </summary>
        </member>
        <member name="F:Alhambra.Game.rounds">
            <summary>
            Total rounds played.
            </summary>
        </member>
        <member name="F:Alhambra.Game.buildingsOfImaginary">
            <summary>
            Buildings of imaginary player. Used only if game mode 'WithImaginary' is active.
            </summary>
        </member>
        <member name="F:Alhambra.Game.dataLog">
            <summary>
            Contains log of players' moves.
            </summary>
        </member>
        <member name="F:Alhambra.Game.MapSize">
            <summary>
            The size of the map in Alhambra game. Map is a square.
            </summary>
        </member>
        <member name="F:Alhambra.Game.MarketSize">
            <summary>
            The size of market in Alhambra game.
            </summary>
        </member>
        <member name="F:Alhambra.Game.MaxPlayers">
            <summary>
            Maximal number of players in Alhambra game.
            </summary>
        </member>
        <member name="F:Alhambra.Game.IndexOfImaginary">
            <summary>
            Indicates index of imaginary player.
            </summary>
        </member>
        <member name="F:Alhambra.Game.NumberOfScoringRounds">
            <summary>
            Represents the number of scoring rounds in the game.
            </summary>
        </member>
        <member name="P:Alhambra.Game.NumberOfPlayers">
            <summary>
            Number of players in the current game instance.
            </summary>
        </member>
        <member name="F:Alhambra.Game.attachedGameForm">
            <summary>
            Instance of 'Alhambra.GameForm' that is attached to the current game. Null if the game is without GUI.
            </summary>
        </member>
        <member name="F:Alhambra.Game.checker">
            <summary>
            Instance of 'Alhambra.MoveChecker' that is used to determine correctness of the moves.
            </summary>
        </member>
        <member name="F:Alhambra.Game.rnd">
            <summary>
            Random generator used for initialization of the current game instance.
            </summary>
        </member>
        <member name="F:Alhambra.Game.lastPlayer">
            <summary>
            ID of player who plays last.
            </summary>
        </member>
        <member name="F:Alhambra.Game.gamePoints">
            <summary>
            Encapsulates a number of points to distributed among the players for the specific 'Alhambra.BuildingType'.
            </summary>
        </member>
        <member name="F:Alhambra.Game.storedCards">
            <summary>
            Already used cards for purchase any building.
            </summary>
        </member>
        <member name="F:Alhambra.Game.freePositionsOnMarket">
            <summary>
            Indices of free positions (in game market) where are not buildings currently.
            </summary>
        </member>
        <member name="F:Alhambra.Game.nonAvailableCardsOnMarket">
            <summary>
            True if a new card can't be added to market (players have taken all cards in package).
            </summary>
        </member>
        <member name="P:Alhambra.Game.Controller">
            <summary>
            Controller instance that operates with current game.
            </summary>
        </member>
        <member name="P:Alhambra.Game.GameMode">
            <summary>
            Determines whether imaginary player is part of the game.
            </summary>
        </member>
        <member name="P:Alhambra.Game.HasAttachedGameForm">
            <summary>
            Determines whether the current game instance has attached any game form.
            </summary>
        </member>
        <member name="P:Alhambra.Game.Started">
            <summary>
            Indicates whether the game has already started.
            </summary>
        </member>
        <member name="P:Alhambra.Game.Finished">
            <summary>
            Indicates whether the game has already finished.
            </summary>
        </member>
        <member name="P:Alhambra.Game.MoveHasEnded">
            <summary>
            Indicates whether the any move just ended and the other one has not started yet.
            </summary>
        </member>
        <member name="P:Alhambra.Game.GameCodeStorage">
            <summary>
            Initialized Alhambra.CodeStorage instance for current game.
            </summary>
        </member>
        <member name="M:Alhambra.Game.#ctor(Alhambra.Controller,System.Int32)">
            <summary>
            Initializes a new instance of 'Alhambra.Game'.
            </summary>
            <param name="controller">Reference for 'Alhambra.Controller' instance.
            This controller will direct the current game.</param>
            <param name="numberOfPlayers">Number of players within the game.</param>
        </member>
        <member name="M:Alhambra.Game.#ctor(Alhambra.Controller,System.Int32,System.Random)">
            <summary>
            Initializes a new instance of 'Alhambra.Game'.
            </summary>
            <param name="controller">Reference for 'Alhambra.Controller' instance.
            This controller will direct the current game.</param>
            <param name="numberOfPlayers">Number of players within the game.</param>
            <param name="rnd">Random generator used for initialization of the current instance.</param>
        </member>
        <member name="M:Alhambra.Game.Initialize">
            <summary>
            Initializes collections and prepares the game, including leaving cards
            to imaginary player if necessary.
            </summary>
        </member>
        <member name="M:Alhambra.Game.AttachView(Alhambra.GameForm)">
            <summary>
            Attaches to game the specified instance of 'Alhambra.GameForm'. This game form will be notified about game data changes.
            </summary>
            <param name="gameForm">Game form to be attached.</param>
        </member>
        <member name="M:Alhambra.Game.FillMarket">
            <summary>
            Set into market variables 'buildingsOnMarket' and 'cardsOnMarket' correct data.
            Data are taken from total buildings and card package.
            </summary>
        </member>
        <member name="M:Alhambra.Game.ShowStartCards">
            <summary>
            Appends to log information about starting cards of each player.
            If GUI is attached, shows the specific form with these information.
            </summary>
        </member>
        <member name="M:Alhambra.Game.EnqueueOrder(System.Collections.Generic.List{Alhambra.Card}[])">
            <summary>
            Based on the number of cards of players calculates initial sequence of player's move.
            </summary>
        </member>
        <member name="T:Alhambra.Game.SequenceTupleComparer">
            <summary>
            Implements Compare method for Tuples with tripple int.
            Comparison is by the first element (Item1) then by the second (Item2) and then by the third (Item3).
            Item3 should be unique.
            </summary>
        </member>
        <member name="M:Alhambra.Game.SequenceTupleComparer.Compare(System.Tuple{System.Int32,System.Int32,System.Int32},System.Tuple{System.Int32,System.Int32,System.Int32})">
            <summary>
            Compares two specified tuples.
            </summary>
            <param name="x">First tuple to compare.</param>
            <param name="y">Second tuple to compare.</param>
            <returns></returns>
        </member>
        <member name="M:Alhambra.Game.DistributeCards(System.Collections.Generic.List{Alhambra.Card}[]@,System.Collections.Generic.List{Alhambra.Card}@)">
            <summary>
            Distributes cards according to the rules of game.
            </summary>
            <param name="toBeFilled">
            Dictionary to be filled with cards from package (the second argument).
            For every key (as player ID) in dictionary are taken cards up to 20 limit of total value.
            </param>
            <param name="package">The list of cards that will be taken to fill dictionary.</param>
        </member>
        <member name="M:Alhambra.Game.FillGamePoints">
            <summary>
            Sets into 'gamePoints' values of points for each scoring round according to game rules.
            </summary>
        </member>
        <member name="M:Alhambra.Game.AcceptMove(Alhambra.BuyBuildingMove)">
            <summary>
            Changes the game data; based on the specified 'Alhambra.BuyBuildingMove' instance.
            </summary>
            <param name="move">Data changes will be based on this move.</param>
        </member>
        <member name="M:Alhambra.Game.AcceptMove(Alhambra.TakeCardMove)">
            <summary>
            Changes the game data; based on the specified Alhambra.TakeCardMove instance.
            </summary>
            <param name="move">Data changes will be based on this move.</param>
        </member>
        <member name="M:Alhambra.Game.AcceptMove(Alhambra.RebuildMove)">
            <summary>
            Changes the game data; based on the specified Alhambra.RebuildMove instance.
            </summary>
            <param name="move">Data changes will be based on this move.</param>
        </member>
        <member name="M:Alhambra.Game.AcceptMove(System.Collections.Generic.List{Alhambra.Building})">
            <summary>
            Chances the game data; called whether the player can't make a move.
            </summary>
            <param name="fromPrevious">A list of buildings that were buy in previous moves.</param>
        </member>
        <member name="M:Alhambra.Game.ModifyPlayedRounds(System.Int32)">
            <summary>
            Checks whether to increase the number of played rounds.
            </summary>
            <param name="playerID">Actually played move.</param>
        </member>
        <member name="M:Alhambra.Game.CreateAndAppendLogLines(Alhambra.BuyBuildingMove)">
            <summary>
            For the specified move, creates a new log line.
            </summary>
            <param name="move">Created log line is based on this move instance.</param>
        </member>
        <member name="M:Alhambra.Game.CreateAndAppendLogLines(Alhambra.TakeCardMove)">
            <summary>
            For the specified move, creates a new log line.
            </summary>
            <param name="move">Created log line is based on this move instance.</param>
        </member>
        <member name="M:Alhambra.Game.CreateAndAppendLogLines(Alhambra.RebuildMove)">
            <summary>
            For the specified move, creates a new log line.
            </summary>
            <param name="move">Created log line is based on this move instance.</param>
        </member>
        <member name="M:Alhambra.Game.CreateAndAppendLogLines(System.Collections.Generic.List{Alhambra.Building})">
            <summary>
            Creates a log line for buildings from previous move. Used if and only if player can't make a move.
            </summary>
            <param name="fromPreviousMove">A list of buildings to be placed. Buildings from previous move.</param>
        </member>
        <member name="M:Alhambra.Game.AppendFromPreviousAsString(System.Collections.Generic.List{Alhambra.Building})">
            <summary>
            Creates a string representing buildings used in previous move and appends them into game data log.
            </summary>
            <param name="fromPreviousMove">A list of buildings to be represented.</param>
        </member>
        <member name="M:Alhambra.Game.TranslateColorToResourceString(System.Drawing.Color)">
            <summary>
            Translates the specified Color to string representation. Look up into resources.
            </summary>
            <param name="color">Color to be translated.</param>
            <returns>A string representation of the specified Color.</returns>
        </member>
        <member name="M:Alhambra.Game.RemovePostponedBuilding(System.Int32,Alhambra.Building)">
            <summary>
            Removes the specified building from player's postponed buildings, specified by player ID.
            </summary>
            <param name="playerID">Determines from which postponed list will be building removed.</param>
            <param name="building">A building to be removed.</param>
        </member>
        <member name="M:Alhambra.Game.RemoveConstructedBuilding(System.Int32,Alhambra.Building)">
            <summary>
            Removes the specified building from player's constructed buildings, specified by player ID.
            </summary>
            <param name="playerID">Determines from which constructed list will be building removed.</param>
            <param name="building">A building to be removed.</param>
        </member>
        <member name="M:Alhambra.Game.RemoveFromMarket(Alhambra.Building)">
            <summary>
            Finds and removes building in buildingsOnMarket array.
            </summary>
            <param name="toRemove">Building to be removed.</param>
        </member>
        <member name="M:Alhambra.Game.UpdateMarket(System.Collections.Generic.List{Alhambra.Card})">
            <summary>
            Updates current data in market variables.
            </summary>
            <param name="takenDueMove">List of cards which were taken due move.</param>
        </member>
        <member name="M:Alhambra.Game.RefreshBuildingsOnMarket">
            <summary>
            Refreshes buildings in market, completes empty spaces.
            </summary>
        </member>
        <member name="M:Alhambra.Game.RefreshCardsOnMarket(System.Collections.Generic.List{Alhambra.Card})">
            <summary>
            Refreshes cards in market, completes empty spaces. If card of Scoring type is taken, evaluates points for players.
            </summary>
            <param name="takenDueMove">Card that were taken due move.</param>
        </member>
        <member name="M:Alhambra.Game.AppendScoreOrderToLog">
            <summary>
            Appends a new log line into 'dataLog'. Ordered players by their score.
            </summary>
        </member>
        <member name="M:Alhambra.Game.GetActualOrders">
            <summary>
            Evaluates and sorts actual score of players within the game. Including
            imaginary player's score, if necessary. Tuples are &lt;PlayerID, ActualScore&gt;.
            Sorted DSC by scores.
            </summary>
        </member>
        <member name="M:Alhambra.Game.Finish">
            <summary>
            Called at the end of the game.
            </summary>
        </member>
        <member name="M:Alhambra.Game.SetPlayerOrderToStart">
            <summary>
            Sets player order to the order at the start of the game.
            </summary>
        </member>
        <member name="M:Alhambra.Game.EvaluateLastScore">
            <summary>
            Evaluates last score of the game and finishes the game.
            </summary>
        </member>
        <member name="M:Alhambra.Game.IndexOfNonEmptyCard(Alhambra.Card[],Alhambra.Card)">
            <summary>
            Finds index of card in array. If array don't contains specified card, -1 is returned.
            </summary>
            <param name="arr">Array to find in.</param>
            <param name="item">Item which will be searched for in array.</param>
            <returns>Index of item in array or -1.</returns>
        </member>
        <member name="M:Alhambra.Game.IndexOfBuilding(Alhambra.Building[],Alhambra.Building)">
            <summary>
            Finds index of building in array. If array don't contains specified building, -1 is returned.
            </summary>
            <param name="arr">Array to find in.</param>
            <param name="item">Item which will be searched for in array.</param>
            <returns>Index of item in array or -1.</returns>
        </member>
        <member name="M:Alhambra.Game.GetNextPlayer">
            <summary>
            Gets ID of player who should play next move.
            </summary>
            <returns>Player ID who should play next move.</returns>
        </member>
        <member name="M:Alhambra.Game.InvokeNotify">
            <summary>
            Invokes via 'System.Windows.Forms.MethodInvoker' notification to the attached GUI.
            </summary>
        </member>
        <member name="M:Alhambra.Game.MoveEnded">
            <summary>
            Called after end of move; invokes a notification for GUI to repaint and refresh data.
            </summary>
        </member>
        <member name="M:Alhambra.Game.HasGainedExtraMove(Alhambra.BuyBuildingMove)">
            <summary>
            Determines if building bought in the move specified by parameter is over paid or not.
            </summary>
            <returns>True if building bought in the move specified by parameter is over paid.</returns>
        </member>
        <member name="M:Alhambra.Game.UpdateBuildings(System.Int32,System.Collections.Generic.List{Alhambra.Building})">
            <summary>
            For specified player and list of buildings check emptiness of list and for every building
            in list is called PlaceBuildingAndUpdateBounds method.
            </summary>
            <param name="playerID">Player associated with data modification.</param>
            <param name="modified">List of modified buildings.</param>
        </member>
        <member name="M:Alhambra.Game.PlaceBuildingAndUpdateBounds(System.Int32,Alhambra.Building)">
            <summary>
            Updates data in 'map' and 'constructed' (or 'postponed') variables according to parameters.
            </summary>
            <param name="playerID">Player associated with data modification.</param>
            <param name="building">Building whose data are used to update class variables.</param>
        </member>
        <member name="M:Alhambra.Game.FillBuildingList">
            <summary>
            Calls and returns randomly arranged list of all buildings.
            </summary>
            <returns>Randomly arranged list of all buildings within game.</returns>
        </member>
        <member name="M:Alhambra.Game.GeneratePackage">
            <summary>
            Based on game mode generates list of all cards within game.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Alhambra.Game.ListShake``1(System.Collections.Generic.List{``0})">
            <summary>
            Generic method for random mix of specified list.
            </summary>
            <typeparam name="T">No restrictions for T. Mainly used for Building and Card.</typeparam>
            <param name="list">List to be mixed.</param>
            <returns>Randomly mixed list.</returns>
        </member>
        <member name="M:Alhambra.Game.InsertScoringCards(System.Collections.Generic.List{Alhambra.Card})">
            <summary>
            Into specified list by parameter inserts two of scoring cards. Used positions are specified by game rules.
            </summary>
            <param name="list">List of cards into will be added scoring cards.</param>
            <returns>Enriched list.</returns>
        </member>
        <member name="M:Alhambra.Game.IsPermissible(Alhambra.Move)">
            <summary>
            Checks if move specified by parameter is in accordance with game rules.
            </summary>
            <param name="move">Move to by checked.</param>
            <returns>True if move is permissible.</returns>
        </member>
        <member name="M:Alhambra.Game.GetNumberOfSpecifiedBuilding(System.Int32,Alhambra.BuildingType)">
            <summary>
            Computes a number of buildings of the specified type.
            </summary>
            <param name="playerID">Player whose buildings will be computed.</param>
            <param name="buildingType">Color of building to be computed.</param>
            <returns>Number of buildings of specified color.</returns>
        </member>
        <member name="M:Alhambra.Game.GetNumberOfSpecifiedCards(System.Int32,Alhambra.CardType)">
            <summary>
            For player computes a sum of specified card values.
            </summary>
            <param name="playerID">Player whose cards will be computed.</param>
            <param name="color">Color of cards whose values will be computed.</param>
            <returns></returns>
        </member>
        <member name="M:Alhambra.Game.GainedScore(Alhambra.ScoreRound,Alhambra.BuildingType,System.Int32)">
            <summary>
            Based on parameters returns a one value according to rules. This value
            is number of points to be given to player.
            </summary>
            <param name="round">Round to for evaluate.</param>
            <param name="bt">Building type for evaluate.</param>
            <param name="order">Order of player to avaluate. Must be { 1, 2, 3 }.</param>
            <returns>Number of points to be given to player.</returns>
        </member>
        <member name="M:Alhambra.Game.GetLongestWall(System.Int32)">
            <summary>
            Based on player ID computes and returns the longest wall around player's buildings.
            </summary>
            <param name="playerID">ID of player whose walls will be computed.</param>
            <returns>Length of the longest wall.</returns>
        </member>
        <member name="M:Alhambra.Game.AreIncident(System.Tuple{System.Int32,System.Int32,System.Int32},System.Tuple{System.Int32,System.Int32,System.Int32})">
            <summary>
            For two walls stored in Tuple evalutes if they are incident. Tuple contains row, column and wall index (clockwise, top-right-bottom-left).
            </summary>
            <param name="wall_1">First wall of evaluation.</param>
            <param name="wall_2">Second wall of evaluation.</param>
            <returns>True if the specified walls are incident.</returns>
        </member>
        <member name="M:Alhambra.Game.GetExternalWalls(System.Int32)">
            <summary>
            For the specified player creates list containing all walls which are external.
            </summary>
            <param name="playerID">ID of player whose walls will be computed.</param>
            <returns>List of all external walls.</returns>
        </member>
        <member name="M:Alhambra.Game.IsExternal(System.Int32,System.Tuple{System.Int32,System.Int32,System.Int32})">
            <summary>
            Returns true if the specified wall is external. Otherwise false.
            </summary>
            <param name="playerID">ID of player who owns specified wall.</param>
            <param name="wall">Wall to evaluate.</param>
            <returns>True if the specified wall is external; otherwise false.</returns>
        </member>
        <member name="M:Alhambra.Game.GetYesOrNo(System.Boolean,System.Boolean)">
            <summary>
            Look up into resources and returns a string representation of YES or NO.
            </summary>
            <param name="value">Value to be represented.</param>
            <param name="shortVersion">If true, returns short version Y/N.</param>
            <returns>A string representation of YES or NO.</returns>
        </member>
        <member name="M:Alhambra.Game.ModifyPlayerOrder(System.Int32)">
            <summary>
            If game has come to the end, method modifies queue order of players to one player ID specified by parameter.
            This implies fact that call of GetNextPlayer() will return a specific player ID.
            </summary>
        </member>
        <member name="T:Alhambra.GameForm">
            <summary>
            Represents main part of GUI of the game.
            </summary>
        </member>
        <member name="P:Alhambra.GameForm.AssociatedGame">
            <summary>
            The 'Alhambra.Game' associated with the current 'Alhambra.GameForm'.
            </summary>
        </member>
        <member name="P:Alhambra.GameForm.AssociatedController">
            <summary>
            The 'Alhambra.Controller' associated with the current 'Alhambra.GameForm'.
            </summary>
        </member>
        <member name="F:Alhambra.GameForm.playersMap">
            <summary>
            Maps of each player.
            </summary>
        </member>
        <member name="F:Alhambra.GameForm.unresolvedOnMarket">
            <summary>
            Contains 'Alhambra.UnresolvedBuildingCC' of player that is actually on move
            </summary>
        </member>
        <member name="F:Alhambra.GameForm.playerPostponedBuildings">
            <summary>
            Postponed buildings of each player.
            </summary>
        </member>
        <member name="F:Alhambra.GameForm.parentIntroduction">
            <summary>
            Instance of 'Alhambra.IntroductionForm' which created this 'Alhambra.GameForm'.
            </summary>
        </member>
        <member name="F:Alhambra.GameForm.playerScoreLabels">
            <summary>
            For each player determines a label where to show score.
            </summary>
        </member>
        <member name="F:Alhambra.GameForm.playerWallsLengthLabels">
            <summary>
            For each player determines a label where to show length of the longest wall.
            </summary>
        </member>
        <member name="F:Alhambra.GameForm.playerNumberOfCardsLabels">
            <summary>
            For each player determines a label where to show the number of owned cards.
            </summary>
        </member>
        <member name="F:Alhambra.GameForm.checker">
            <summary>
            Instance of 'Alhambra.MoveChecker' that is used to check player's moves via GUI.
            </summary>
        </member>
        <member name="F:Alhambra.GameForm.controlsWithText">
            <summary>
            List of controls/components that shows any text to the user.
            </summary>
        </member>
        <member name="F:Alhambra.GameForm.clickedToStartNewGame">
            <summary>
            Indicates whether the user clicked to 'New Game' in the game menu and confirmed via 'MessageBox'.
            </summary>
        </member>
        <member name="F:Alhambra.GameForm.selectedCardsToTake">
            <summary>
            Currently selected cards for new move.
            </summary>
        </member>
        <member name="F:Alhambra.GameForm.selectedCardsToPurchase">
            <summary>
            Currently selected cards for purchase a new building.
            </summary>
        </member>
        <member name="F:Alhambra.GameForm.selectedToRebuild">
            <summary>
            Selected 'Alhambra.BuildingCC' for rebuild move (in postponed or player map).
            </summary>
        </member>
        <member name="F:Alhambra.GameForm.givenToPlayersBuildings">
            <summary>
            Buildings given to players at the end of the game (these buildings will be attached to 'Alhambra.UnresolvedCC').
            </summary>
        </member>
        <member name="F:Alhambra.GameForm.usedDueMoveInPostOrImag">
            <summary>
            Buildings placed to postponed or given to imaginary player in one move but still not reflected in the game data.
            </summary>
        </member>
        <member name="F:Alhambra.GameForm.buildingsPlacedInOneMove">
            <summary>
            Indicates how many buildings were placed during the move.
            </summary>
        </member>
        <member name="F:Alhambra.GameForm.usedDueMoveInMap">
            <summary>
            Buildings placed to game map in one move but still not reflected in game data.
            </summary>
        </member>
        <member name="F:Alhambra.GameForm.canNotMakeMove">
            <summary>
            Indicates whether the current player can not make a new move.
            </summary>
        </member>
        <member name="F:Alhambra.GameForm.leaveToImagButtonPressed">
            <summary>
            Indicates whether the 'leaveToImagButton' was pressed.
            </summary>
        </member>
        <member name="F:Alhambra.GameForm.move">
            <summary>
            Contains an instance of the current Move, created by GUI.
            </summary>
        </member>
        <member name="F:Alhambra.GameForm.removedDueMove">
            <summary>
            Building removed from map in a rebuild move, but still not reflected in game data.
            Also player has remaining building/s in unresolved.
            </summary>
        </member>
        <member name="F:Alhambra.GameForm.gameThread">
            <summary>
            Thread where the main game loop runs.
            </summary>
        </member>
        <member name="F:Alhambra.GameForm.controllerHasWaitForGUI">
            <summary>
            Set to true if and only if game has come the end and controller need to wait
            for GUI drag and drop events (used in 'Alhambra.Controller.AcceptFreeBuilding' method)
            </summary>
        </member>
        <member name="F:Alhambra.GameForm.canClickOnMarketCards">
            <summary>
            If false, player can't click on cards on market.
            </summary>
        </member>
        <member name="F:Alhambra.GameForm.takeCardButtonPressed">
            <summary>
            Determines whether takeCardsButton was pressed.
            </summary>
        </member>
        <member name="F:Alhambra.GameForm.alreadyPreparedRebuild">
            <summary>
            Determines whether player made rebuild move (and some of buildings still
            waiting in player's unresolved for completion.
            </summary>
        </member>
        <member name="F:Alhambra.GameForm.logForms">
            <summary>
            List of actually visible log forms.
            </summary>
        </member>
        <member name="P:Alhambra.GameForm.HasGainedMoveNow">
            <summary>
            True if player actually received free next move.
            </summary>
        </member>
        <member name="M:Alhambra.GameForm.#ctor">
            <summary>
            Empty constructor to create an instance of 'Alhambra.GameForm'.
            </summary>
        </member>
        <member name="M:Alhambra.GameForm.#ctor(Alhambra.Controller,System.Threading.Thread,Alhambra.IntroductionForm)">
            <summary>
            Initializes a new instance of 'Alhambra.GameForm'.
            </summary>
            <param name="controller">Controller to be associated with new game form.</param>
            <param name="parent">The 'Alhambra.IntroductionForm' parent which calls to create a new game form.</param>
        </member>
        <member name="M:Alhambra.GameForm.GetAllControlsWithText">
            <summary>
            Returns a list of all controls and components in the current 'Alhambra.GameForm' instance that contains any text.
            </summary>
            <returns>A list of all controls and components in the current 'Alhambra.GameForm' instance that contains any text.</returns>
        </member>
        <member name="M:Alhambra.GameForm.InitializeStrings">
            <summary>
            Initializes correct strings into game form (look for localized strings in resources).
            </summary>
        </member>
        <member name="M:Alhambra.GameForm.SetFontToControls">
            <summary>
            Sets same font to all controls/components in this 'Alhambra.GameForm' that contains any text.
            </summary>
        </member>
        <member name="M:Alhambra.GameForm.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            Exits whole application.
            </summary>
            <param name="e">Form closing arguments.</param>
        </member>
        <member name="M:Alhambra.GameForm.OnCreateControl">
            <summary>
            After creating control calls Notify for refresh game data in GUI.
            </summary>
        </member>
        <member name="M:Alhambra.GameForm.CreateTabForPlayer(System.Int32)">
            <summary>
            Creates components that visually represents game buildings (map, postponed and unresolved) of a specified player.
            </summary>
            <param name="playerID">Player ID whose game data will be represented by created components.</param>
        </member>
        <member name="M:Alhambra.GameForm.GetTextForPlayerColor(System.Drawing.Color)">
            <summary>
            Converts Color to string if possible. Looks into resources for localized string of specified color.
            </summary>
            <param name="playerColor">Color to be converted.</param>
            <returns>A string representation of the specified 'System.Drawing.Color'.</returns>
        </member>
        <member name="M:Alhambra.GameForm.CreateCardContainerForPlayer(System.Int32)">
            <summary>
            Creates components that visually represents cards of the specified player within the game.
            </summary>
            <param name="playerID">Player ID whose game data will be represented by created components.</param>
        </member>
        <member name="M:Alhambra.GameForm.CreateTabForImaginary">
            <summary>
            Creates components that visually represents game buildings of imaginary player within the game.
            Called only in WithImaginary GameMode.
            </summary>
        </member>
        <member name="M:Alhambra.GameForm.AddShowMapToolStripMenuItem(System.Int32)">
            <summary>
            Creates and adds tool strip menu item to drop down items in showMapToolStripMenuItem. 
            </summary>
            <param name="playerID">Tool strip menu item is asociated with this player ID.</param>   
        </member>
        <member name="M:Alhambra.GameForm.tabControl_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Selects a specific tab page and if called for the first time, set game map to middle.
            </summary>
        </member>
        <member name="M:Alhambra.GameForm.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Draws main lines at main game form control.
            </summary>
            <param name="e">Paint event arguments.</param>
        </member>
        <member name="M:Alhambra.GameForm.DrawMainLines(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Draws main black lines to the main game form control.
            </summary>
            <param name="e">Paint event arguments.</param>
        </member>
        <member name="M:Alhambra.GameForm.CreateScoreLabels">
            <summary>
            Creates a score labels for the game form control.
            These colored labels will be used to show player actual score.
            </summary>
        </member>
        <member name="M:Alhambra.GameForm.CreateWallsLengthLabels">
            <summary>
            Creates labels for store values of the longest walls for each player.
            </summary>
        </member>
        <member name="M:Alhambra.GameForm.CreateNumberOfCardsLabels">
            <summary>
            Creates labels for store values of the numbers of cards for each player.
            </summary>
        </member>
        <member name="M:Alhambra.GameForm.CreateStandardLabel(System.Drawing.Color)">
            <summary>
            Creates a standard label.
            </summary>
            <param name="backColor">Color to be used as a background color of this label.</param>
            <returns>A new instance of System.Windows.Forms.Label used for show a numeric value.</returns>
        </member>
        <member name="M:Alhambra.GameForm.saveGameToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Called for save the game.
            </summary>
        </member>
        <member name="M:Alhambra.GameForm.newGameToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Called for start a new game.
            </summary>
        </member>
        <member name="M:Alhambra.GameForm.exitToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Called for exit the game.
            </summary>
        </member>
        <member name="M:Alhambra.GameForm.ShowExitMessage">
            <summary>
            Shows a 'MessageBox' about exiting the game.
            </summary>
            <returns>True if user clicked YES.</returns>
        </member>
        <member name="M:Alhambra.GameForm.ShowNewGameStartMessage">
            <summary>
            Shows a 'MessageBox' about exiting current game and starting the new one.
            </summary>
            <returns>True if user clicked YES.</returns>
        </member>
        <member name="M:Alhambra.GameForm.Notify">
            <summary>
            Based on game data updates GUI controls.
            </summary>
        </member>
        <member name="M:Alhambra.GameForm.ToPoint(System.Int32,System.Int32)">
            <summary>
            Translate row and column information, based on BuildingSize and PenWidth,
            to a Point.
            </summary>
            <param name="row">Row that will be used for translation.</param>
            <param name="column">Column that will be used for translation.</param>
            <returns>Point which represents the specified row and column.</returns>
        </member>
        <member name="M:Alhambra.GameForm.takeCardsButton_Click(System.Object,System.EventArgs)">
            <summary>
            Called when clicking on 'takeCardsButton'.
            </summary>
        </member>
        <member name="M:Alhambra.GameForm.IsBuildingSelected">
            <summary>
            Determines whether any of buildings in market is selected to purchase.
            </summary>
            <returns>True if any of buildings in market is selected to purchase; otherwise false.</returns>
        </member>
        <member name="M:Alhambra.GameForm.GetSelectedBuilding">
            <summary>
            Loops over buildings in market and returns selected building to purchase.
            </summary>
            <returns>A selected BuildingCC to purchase.</returns>
        </member>
        <member name="M:Alhambra.GameForm.UnclickSelectedCards">
            <summary>
            Unselect all selected player's owned cards.
            </summary>
        </member>
        <member name="M:Alhambra.GameForm.TryCreateBuyBuildingMove">
            <summary>
            If possible, creates a new instance of Alhambra.BuyBuildingMove parameterized by GUI events.
            </summary>
        </member>
        <member name="M:Alhambra.GameForm.SetMovability(System.Int32,System.Boolean)">
            <summary>
            Sets mobility of player's BuildingCC instances (in map and in unresolved) to the specified value. 
            </summary>
            <param name="playerID">Player to be set.</param>
            <param name="value">Indicates mobility value.</param>
        </member>
        <member name="M:Alhambra.GameForm.TryCreateRebuildMove(Alhambra.BuildingCC,Alhambra.BuildingCC)">
            <summary>
            If possible, creates a new instance of Alhambra.RebuildMove parametrized by GUI events.
            </summary>
            <param name="toAlhambra">A building to be placed in Alhambra or null.</param>
            <param name="toStorage">A building to be placed in storage or null.</param>
            <returns>True if a new move was successfully set; otherwise false.</returns>
        </member>
        <member name="M:Alhambra.GameForm.TrySetBuildingLocation(Alhambra.Position,Alhambra.Building@)">
            <summary>
            Sets position to the specified building, if possible due to the game rules.
            </summary>
            <param name="position">Position to set.</param>
            <param name="building">Building to be set.</param>
            <returns>True if position was successfully set; otherwise false.s</returns>
        </member>
        <member name="M:Alhambra.GameForm.TranslateToCards(System.Collections.Generic.List{Alhambra.CardCC})">
            <summary>
            Transates list of CardCC controls into list of Card.
            </summary>
            <param name="set">Set to be translated.</param>
            <returns>A new list of Card that represents CardCC controls.</returns>
        </member>
        <member name="M:Alhambra.GameForm.InvokeMove(Alhambra.Building)">
            <summary>
            Based on pre-prepared 'move' variable invokes a game data change (via Alhambra.Game.AcceptMove call).
            </summary>
            <param name="modifiedBuilding">Building modified in current move.</param>
        </member>
        <member name="M:Alhambra.GameForm.CleanGameForm(System.Int32)">
            <summary>
            Cleans up the current Alhambra.GameForm. Used after a successful move.
            </summary>
        </member>
        <member name="M:Alhambra.GameForm.TryCreateFlipMove(Alhambra.BuildingCC)">
            <summary>
            Creates a new instance of RebuildMove (with flipping two buildings), if possible due to the game rules.
            </summary>
            <param name="buildingCC">One of two buildings for rebuild-flip move (second must be already selected).</param>
        </member>
        <member name="M:Alhambra.GameForm.ShowMap(System.Object,System.EventArgs)">
            <summary>
            Shows a new form with grafically represented map of player.
            </summary>
        </member>
        <member name="M:Alhambra.GameForm.showHelpToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Shows help in a new web browser window.
            </summary>
        </member>
        <member name="M:Alhambra.GameForm.showLogToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Shows a new instance of Alhambra.LogForm.
            </summary>
        </member>
        <member name="M:Alhambra.GameForm.leaveToImagButton_Click(System.Object,System.EventArgs)">
            <summary>
            Purchased buildings will be given to imaginary player.
            </summary>
        </member>
        <member name="M:Alhambra.GameForm.NotifyScoringCard(Alhambra.ScoreRound,System.Int32[])">
            <summary>
            Pops-up a notification about taking a scoring card.
            </summary>
            <param name="scoringType">Indicates a scoring card type.</param>
            <param name="gainedPoints">Points gained due taken scoring card.</param>
        </member>
        <member name="M:Alhambra.GameForm.InsertBuildingIntoUnresolved(System.Int32,Alhambra.Building)">
            <summary>
            Inserts into a specific unresolved buildingCC control a building. Changes next player ID (who should play in next move).
            </summary>
        </member>
        <member name="M:Alhambra.GameForm.DisableAllMobility">
            <summary>
            Disables all possiblities to click (or drag etc.) at buildings and cards
            in the game (except buildings in unresolved).
            </summary>
        </member>
        <member name="M:Alhambra.GameForm.IsNotPossibleToPlay">
            <summary>
            Returns true if actual player who should play next can NOT make move.
            </summary>
            <returns>True if actual player who should play next can not make a move.</returns>
        </member>
        <member name="M:Alhambra.GameForm.ShowStartCardsForm">
            <summary>
            Shows a new Form with information about start cards of each player.
            </summary>
        </member>
        <member name="F:Alhambra.GameForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Alhambra.GameForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Alhambra.GameForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Alhambra.GameMode">
            <summary>
            Represents one of two available gaming modes.
            </summary>
        </member>
        <member name="T:Alhambra.ImagPlayerBuildingsCC">
            <summary>
            Control holding buildings of imaginary player, when 'WithImaginary' game mode is active.
            </summary>
        </member>
        <member name="M:Alhambra.ImagPlayerBuildingsCC.#ctor(Alhambra.GameForm)">
            <summary>
            Initializes a new 'Alhambra.ImagPlayerBuildingsCC' custom control.
            </summary>
            <param name="gameForm">A 'Alhambra.GameForm' where will be the current control placed.</param>
        </member>
        <member name="M:Alhambra.ImagPlayerBuildingsCC.RefreshData">
            <summary>
            Looks into a game data and refreshes child controls.
            </summary>
        </member>
        <member name="M:Alhambra.ImagPlayerBuildingsCC.AdjustSize">
            <summary>
            Based on number of controls hold in this control, resizes itself.
            </summary>
        </member>
        <member name="M:Alhambra.ImagPlayerBuildingsCC.ImagPlayerBuildingsCC_MouseEnter(System.Object,System.EventArgs)">
            <summary>
            Focuses on the current control.
            </summary>
        </member>
        <member name="F:Alhambra.ImagPlayerBuildingsCC.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Alhambra.ImagPlayerBuildingsCC.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Alhambra.ImagPlayerBuildingsCC.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Alhambra.IntroductionForm">
            <summary>
            First displayed form when application starts.
            </summary>
        </member>
        <member name="F:Alhambra.IntroductionForm.ShowColorTag">
            <summary>
            Used to determine correct colored label. Only labels that shows
            a color of the player has this tag.
            </summary>
        </member>
        <member name="M:Alhambra.IntroductionForm.#ctor">
            <summary>
            Initializes new instance of Alhambra.IntroductionForm.
            </summary>
        </member>
        <member name="M:Alhambra.IntroductionForm.InitializeStrings">
            <summary>
            Initializes strings included in current IntroductionForm instance. Looks into resources.
            </summary>
        </member>
        <member name="M:Alhambra.IntroductionForm.SetFontToControls">
            <summary>
            Sets same font to all controls/components in this 'Alhambra.IntroductionForm' that contains any text.
            </summary>
        </member>
        <member name="M:Alhambra.IntroductionForm.ResetToStart">
            <summary>
            Resets form to default settings.
            </summary>
        </member>
        <member name="M:Alhambra.IntroductionForm.newGameButton_Click(System.Object,System.EventArgs)">
            <summary>
            Shows next tab page in current IntroductionForm. Used via clicking on newGameButton.
            </summary>
        </member>
        <member name="M:Alhambra.IntroductionForm.tabControl_Selecting(System.Object,System.Windows.Forms.TabControlCancelEventArgs)">
            <summary>
            Cancels the selecting to tab control. Tab control in IntroductionForm is not selectable by user.
            </summary>
        </member>
        <member name="M:Alhambra.IntroductionForm.loadGameButton_Click(System.Object,System.EventArgs)">
            <summary>
            Shows an 'OpenFileDialog' where user can choose a file (saved game) that will be loaded to the game.
            </summary>
        </member>
        <member name="M:Alhambra.IntroductionForm.helpButton_Click(System.Object,System.EventArgs)">
            <summary>
            Shows help in a new web browser window.
            </summary>
        </member>
        <member name="M:Alhambra.IntroductionForm.ShowHelp">
            <summary>
            Shows help for the game in browser window.
            </summary>
        </member>
        <member name="M:Alhambra.IntroductionForm.exitButton_Click(System.Object,System.EventArgs)">
            <summary>
            Exits the application.
            </summary>
        </member>
        <member name="M:Alhambra.IntroductionForm.addPlayerButton_Click(System.Object,System.EventArgs)">
            <summary>
            Enables a visibility of next panel for setting another player of the Alhambra game.
            </summary>
            <param name="sender">A sender of the event.</param>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Alhambra.IntroductionForm.removePlayerButton_Click(System.Object,System.EventArgs)">
            <summary>
            Disables a visibility of next panel for setting another player of the Alhambra game.
            </summary>
            <param name="sender">A sender of the event.</param>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Alhambra.IntroductionForm.ClearPlayerPanel(System.Windows.Forms.Panel)">
            <summary>
            Cleares combo boxes in the specified panel.
            </summary>
            <param name="panel">Panel to be cleared.</param>
        </member>
        <member name="M:Alhambra.IntroductionForm.SelectedColorIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Handles an index change in color combo boxes.
            </summary>
        </member>
        <member name="M:Alhambra.IntroductionForm.CheckCorrectnessOfPanels">
            <summary>
            Checks if the settings of players are correct.
            </summary>
        </member>
        <member name="M:Alhambra.IntroductionForm.GetColorContainedInPanel(System.Windows.Forms.Panel)">
            <summary>
            In the specified panel looks for Label with ShowColorTag and returns its color.
            </summary>
            <param name="panel">A panel where to search.</param>
            <returns>A 'System.Drawing.Color' of the label contained within the specified panel.</returns>
        </member>
        <member name="M:Alhambra.IntroductionForm.IsSetCorrectly(System.Windows.Forms.Panel)">
            <summary>
            Returns true if the specified panel has selected item.
            </summary>
            <param name="panel">Panel to be checked.</param>
            <returns>True if the specified panel has selected item.</returns>
        </member>
        <member name="M:Alhambra.IntroductionForm.SelectedPlayerTypeIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Handles an index change in player type combo boxes.
            </summary>
        </member>
        <member name="M:Alhambra.IntroductionForm.GetTagNumber(System.Windows.Forms.Panel)">
            <summary>
            Returns an integer stored in 'Tag' property of the specified panel.
            </summary>
            <param name="panel">Panel which 'Tag' will be returned.</param>
            <returns>An integer stored in 'Tag' property of the specified panel.</returns>
        </member>
        <member name="M:Alhambra.IntroductionForm.ShowError(System.Windows.Forms.Label)">
            <summary>
            Shows an error icon near the specified label.
            </summary>
        </member>
        <member name="M:Alhambra.IntroductionForm.ShowTick(System.Windows.Forms.Label)">
            <summary>
            Shows a tick icon near the specified label.
            </summary>
        </member>
        <member name="M:Alhambra.IntroductionForm.ClearErrorProviders(System.Windows.Forms.Label)">
            <summary>
            Cleares error providers of the specified label.
            </summary>
        </member>
        <member name="M:Alhambra.IntroductionForm.backButton_Click(System.Object,System.EventArgs)">
            <summary>
            Returns the current 'Alhambra.IntroductionForm' to the first tab.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Alhambra.IntroductionForm.startGameButton_Click(System.Object,System.EventArgs)">
            <summary>
            Checks if the setting of the players is correct and starts new GameForm window with the game.
            </summary>
        </member>
        <member name="M:Alhambra.IntroductionForm.GetNumberOfAIPlayers">
            <summary>
            Gets the number of AI players selected from the GUI.
            </summary>
            <returns>The number of AI players selected from the GUI.</returns>
        </member>
        <member name="M:Alhambra.IntroductionForm.StartNewGame(Alhambra.Controller)">
            <summary>
            Starts a new game using the specified 'Alhambra.Controller'.
            </summary>
        </member>
        <member name="M:Alhambra.IntroductionForm.GetColorFromString(System.String)">
            <summary>
            Returns a System.Drawing.Color represented by the specified string.
            </summary>
            <param name="color">A color to be translated to System.Drawing.Color.</param>
            <returns>A System.Drawing.Color that is represented by the specified string.</returns>
        </member>
        <member name="M:Alhambra.IntroductionForm.PlayersAreCorrect">
            <summary>
            Checks if setup of the players is correct.
            </summary>
            <returns>True if setup of the players is correct; otherwise false.</returns>
        </member>
        <member name="M:Alhambra.IntroductionForm.openLogsButton_Click(System.Object,System.EventArgs)">
            <summary>
            Opens a log directory in file explorer.
            </summary>
        </member>
        <member name="M:Alhambra.IntroductionForm.fillBoxesButton_Click(System.Object,System.EventArgs)">
            <summary>
            Fills all shown combo boxes in introduction form (with 'Computer' players and colors).
            </summary>
        </member>
        <member name="F:Alhambra.IntroductionForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Alhambra.IntroductionForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Alhambra.IntroductionForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Alhambra.LogForm">
            <summary>
            Represents a window that shows the Alhambra game log.
            </summary>
        </member>
        <member name="M:Alhambra.LogForm.#ctor(Alhambra.Game)">
            <summary>
            Initializes a new instance of 'Alhambra.LogForm' class.
            </summary>
            <param name="game">A game which log will be shown in this instance.</param>
        </member>
        <member name="M:Alhambra.LogForm.UpdateData">
            <summary>
            Updates a data currently shown in this 'Alhambra.LogForm' instance.
            </summary>
        </member>
        <member name="M:Alhambra.LogForm.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            Raises the 'System.Windows.Forms.Form.FormClosing' event.
            </summary>
            <param name="e">A 'System.Windows.Forms.FormClosingEventArgs' that contains the event data.</param>
        </member>
        <member name="F:Alhambra.LogForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Alhambra.LogForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Alhambra.LogForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Alhambra.MapCC">
            <summary>
            An instance graphically shows a game map of the refered player.
            </summary>
        </member>
        <member name="F:Alhambra.MapCC.onMap">
            <summary>
            BuildingCC controls visually represents building in Alhambra game map.
            </summary>
        </member>
        <member name="F:Alhambra.MapCC.toBeRemoved">
            <summary>
            Indicates the building to be removed from 'Controls'. Used in specific situation - player
            bought a building without over paid and as a new move used swap-rebuild-move. The 'toAlhambra' buildingCC
            must be added into this 'MapCC.Controls' "manually" and subsequently removed (everything happens before calling 'GameForm.Notify' method).
            </summary>
        </member>
        <member name="M:Alhambra.MapCC.#ctor(Alhambra.Game,System.Windows.Forms.TabPage,System.Int32)">
            <summary>
            Creates an instance of the game map control.
            </summary>
            <param name="game">Reference to the Alhambra game.</param>
            <param name="belongsTo">TabPage where will be control added.</param>
            <param name="referedPlayerID">ID of the player who owns data for this game map.</param>
        </member>
        <member name="M:Alhambra.MapCC.RefreshData">
            <summary>
            Looks into a game data and refreshes a child controls.
            </summary>
        </member>
        <member name="M:Alhambra.MapCC.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the background of the control.
            </summary>
        </member>
        <member name="M:Alhambra.MapCC.AttachToTabPage(Alhambra.BuildingCC)">
            <summary>
            Attaches a specified buildingCC control to tab page same as this map control.
            </summary>
            <param name="control">Control to be attached.</param>
        </member>
        <member name="M:Alhambra.MapCC.RemoveFromMap(Alhambra.BuildingCC)">
            <summary>
            Removes a specified buildingCC control from the map and from the Controls property.
            </summary>
            <param name="buildingCC">A 'BuildingCC' control to be removed from the current map.</param>
        </member>
        <member name="M:Alhambra.MapCC.AddToMap(Alhambra.BuildingCC)">
            <summary>
            Adds the BuildingCC control into the map control.
            </summary>
            <param name="control">A 'BuildingCC' control to be added to the current map.</param>
        </member>
        <member name="M:Alhambra.MapCC.MapCC_MouseEnter(System.Object,System.EventArgs)">
            <summary>
            Handles a mouse enter event - setting focus (autoscroll bar will be immediately  available to work via mousewheel).
            </summary>
        </member>
        <member name="F:Alhambra.MapCC.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Alhambra.MapCC.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Alhambra.MapCC.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Alhambra.Move">
            <summary>
            Represents move in the Alhambra game.
            </summary>
        </member>
        <member name="P:Alhambra.Move.PlayerID">
            <summary>
            ID of player who make current move.
            </summary>
        </member>
        <member name="F:Alhambra.Move.modified">
            <summary>
            Buildings that were modified during previous move or moves (and player got an extra move).
            </summary>
        </member>
        <member name="M:Alhambra.Move.#ctor">
            <summary>
            Initializes a list with modified buildings.
            </summary>
        </member>
        <member name="M:Alhambra.Move.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Alhambra.MoveChecker">
            <summary>
            Provides methods for check permissibility of moves in the Alhambra game.
            </summary>
        </member>
        <member name="F:Alhambra.MoveChecker.MaxNotHole">
            <summary>
            Indicates maximum number of built buildings, when their location can't make a hole in map.
            </summary>
        </member>
        <member name="F:Alhambra.MoveChecker.NumberOfNeighbors">
            <summary>
            Indicates a maximum number of neighbors for a building.
            </summary>
        </member>
        <member name="M:Alhambra.MoveChecker.#ctor(Alhambra.Game)">
            <summary>
            Initializes a new instance of Alhambra.MoveChecker.
            </summary>
            <param name="game">A new Alhambra.MoveChecker will be based on game instance.</param>
        </member>
        <member name="M:Alhambra.MoveChecker.IsMoveAllowed(Alhambra.BuyBuildingMove)">
            <summary>
            Check and return bool value if buy building move is in accordance with the rules of the game.
            </summary>
            <param name="move">Move to be checked.</param>
            <returns>True if a specified move is in accordance with the rules.</returns>
        </member>
        <member name="M:Alhambra.MoveChecker.IsMoveAllowed(Alhambra.RebuildMove)">
            <summary>
            Check and return bool value if rebuild move is in accordance with the rules of the game.
            </summary>
            <param name="move">Move to be checked.</param>
            <returns>True if a specified move is in accordance with the rules.</returns>
        </member>
        <member name="M:Alhambra.MoveChecker.IsMoveAllowed(Alhambra.TakeCardMove)">
            <summary>
            Check and return bool value if take card move is in accordance with the rules of the game.
            </summary>
            <param name="move">Move to be checked.</param>
            <returns>True if a specified move is in accordance with the rules.</returns>
        </member>
        <member name="M:Alhambra.MoveChecker.CanTakeCards(System.Collections.Generic.List{Alhambra.Card})">
            <summary>
            Determines whether the specified cards can be taken due to the game rules.
            </summary>
            <param name="cards">Cards to be taken.</param>
            <returns>True if the specified cards can be taken due to the game rules.</returns>
        </member>
        <member name="M:Alhambra.MoveChecker.IsPossibleToBuy(Alhambra.Building,System.Collections.Generic.List{Alhambra.Card},Alhambra.CardType,System.Boolean@)">
            <summary>
            True if specified building is available to buy.
            </summary>
            <param name="building">A building to be bought.</param>
            <param name="cardsToPurchase">List of cards which should be used for purchase a specified building.</param>
            <param name="expected">Expected card type used to buy the building.</param>
            <returns>True if building is possible to buy by specified cards. Otherwise false.</returns>
        </member>
        <member name="M:Alhambra.MoveChecker.IsPossibleToBuyUsingAny(Alhambra.Building,System.Collections.Generic.List{Alhambra.Card},Alhambra.CardType)">
            <summary>
            True if the specified building is possible to buy using any of the specified cards.
            </summary>
            <param name="building">A building to be bought.</param>
            <param name="cardsToPurchase">Cards used to bought the building are choosen from this list.</param>
            <param name="expected">Expected card type used to bought.</param>
            <returns>True if the specified building is possible to buy using any of the specified cards.</returns>
        </member>
        <member name="M:Alhambra.MoveChecker.IsPossibleToBuyExactUsingAny(Alhambra.Building,System.Collections.Generic.List{Alhambra.Card},Alhambra.CardType)">
            <summary>
            True if the specified building can be bought with exact value. 
            </summary>
            <param name="building">A building to be bought.</param>
            <param name="cardsToPurchase">Cards used to bought the building are choosen from this list.</param>
            <param name="expected">Expected card tyoe used to bought.</param>
            <returns>True if the specified building can be bought with exact value.</returns>
        </member>
        <member name="M:Alhambra.MoveChecker.AreBuildingsAllowed(System.Int32,System.Collections.Generic.List{Alhambra.Building},Alhambra.Building)">
            <summary>
            For each building specified by parameter will check if building is available to be added. 
            </summary>
            <param name="playerID">ID of player to check.</param>
            <param name="modified">Buildings that will be checked.</param>
            <returns>True if all of the specified buildings can be added to the game map according to the game rules.</returns>
        </member>
        <member name="M:Alhambra.MoveChecker.CanAddBuildingMoreBuildings(System.Int32,System.Collections.Generic.List{Alhambra.Building})">
            <summary>
            Checks if buildings are permissible to be added to game map.
            Method evaluates right relationships among buildings.
            </summary>
            <param name="playerID">ID of player to check.</param>
            <param name="toBeAdded">Buildings to be checked.</param>
            <returns>True if all of the specified buildings can be added to the game map according to the game rules.</returns>
        </member>
        <member name="M:Alhambra.MoveChecker.CanAddBuilding(System.Int32,Alhambra.Building)">
            <summary>
            Checks if building is permissible to be added to the game map.
            </summary>
            <param name="playerID">ID of player to check.</param>
            <param name="building">Building to be checked.</param>
            <returns>True if the specified building can be added to player's map.</returns>
        </member>
        <member name="M:Alhambra.MoveChecker.CheckNeighboringWalls(System.Int32,Alhambra.Building,Alhambra.Position[])">
            <summary>
            Checks if neighboring positions are not out of game bounds and if a specified walls are in correct connection to a building.
            </summary>
            <param name="playerID">ID of player to check.</param>
            <param name="building">Building whose neighbors will be checked.</param>
            <param name="neighboring">Neighboring positions of a specified building.</param>
            <returns></returns>
        </member>
        <member name="M:Alhambra.MoveChecker.HasConnectionToAnyNeighbor(System.Int32,Alhambra.Building,Alhambra.Position[])">
            <summary>
            Determines whether the specified building has connection (has no wall at a side) to at least one of the neighbors.
            </summary>
            <param name="playerID">Player whose buildings will be used.</param>
            <param name="building">A building to be checked.</param>
            <param name="neighboring">Neighbors of the specified buildings.</param>
            <returns>True if the specified building has connection (has no wall at a side) to at least one of the neighbors.</returns>
        </member>
        <member name="M:Alhambra.MoveChecker.HasConnectionToSpecificNeigbor(Alhambra.Building,Alhambra.Building)">
            <summary>
            Determines whether the specified building has connection (has no wall at a side) to the specified neighbor.
            </summary>
            <param name="building">A building to be checked.</param>
            <param name="neighbor">A neighbor of the specified building.</param>
            <returns>True if the specified building has connection (has no wall at a side) to the specified neihbor.</returns>
        </member>
        <member name="M:Alhambra.MoveChecker.ContainsHoleAdd(System.Int32,Alhambra.Position)">
            <summary>
            Checks whether adding of a building to the specified position arises hole.
            </summary>
            <param name="playerID">ID of player to be checked.</param>
            <param name="toBeAdded">Position to be filled.</param>
            <returns>True if adding of a building to he specified position arises hole.</returns>
        </member>
        <member name="M:Alhambra.MoveChecker.ContainsHoleRemove(System.Int32,Alhambra.Position)">
            <summary>
            Determines whether removing of a building from the specified position arises hole.
            </summary>
            <param name="playerID">ID of player to be checked.</param>
            <param name="toBeRemoved">Position to be cleared.</param>
            <returns>True if removed of a building from the specified position arises hole.</returns>
        </member>
        <member name="M:Alhambra.MoveChecker.ContainsHoleInternal(System.Int32,System.Int32,Alhambra.Position,Alhambra.Position,System.Boolean)">
            <summary>
            Determines whether new game map contains a hole.
            </summary>
            <returns>True if new game map contains a hole.</returns>
        </member>
        <member name="M:Alhambra.MoveChecker.GetSurroundingPositions(System.Int32,System.Int32,Alhambra.Position@,Alhambra.Position@,Alhambra.Position@,Alhambra.Position@)">
            <summary>
            Computes neighboring positions. Does not return list of position due to performance issues.
            </summary>
            <param name="row">Row which neighbors will be evaluated.</param>
            <param name="column">Column which neighbors will be evaluated.</param>
            <param name="p1">A surrounding position or Position.None.</param>
            <param name="p2">A surrounding position or Position.None.</param>
            <param name="p3">A surrounding position or Position.None.</param>
            <param name="p4">A surrounding position or Position.None.</param>
        </member>
        <member name="M:Alhambra.MoveChecker.IsOutOfGameBounds(Alhambra.Position)">
            <summary>
            Determines whether the specified position is out of game bounds.
            </summary>
            <param name="position">A position to be checked.</param>
            <returns>True if the specified position is out of game bounds.</returns>
        </member>
        <member name="M:Alhambra.MoveChecker.IsOutOfRectangleBounds(Alhambra.Position,Alhambra.Position,Alhambra.Position)">
            <summary>
            Determines whether the specified position is out of a rectangle based on top left and bottom right position.
            </summary>
            <param name="topLeft">Top left bound of the player's constructed buildings.</param>
            <param name="bottomRight">Bottom right bound of the player's constructed buildings.</param>
            <param name="toResolve">A position to be checked.</param>
            <returns>True if the specified position is out of the rectangle bounds (based on top left and bottom right positions).</returns>
        </member>
        <member name="M:Alhambra.MoveChecker.HasAllLinkToMiddle(System.Int32,System.Boolean,Alhambra.Position)">
            <summary>
            Determines whether all player's constructed buildings has way to the middle of the map.
            </summary>
            <param name="playerID">Player whom buildings will be checked.</param>
            <param name="hasExclude">True if the specified building will be removed from the map
            (and check link to the middle without using this building).</param>
            <param name="excluding">A building which will be not included in any way to middle from buildings.</param>
            <returns>True if all player's constructed buildings has way to the middle of the map.</returns>
        </member>
        <member name="M:Alhambra.MoveChecker.CanRemoveBuilding(System.Int32,Alhambra.Building)">
            <summary>
            Determines whether the player can remove the specified building.
            </summary>
            <param name="playerID">Player who wants to remove the building.</param>
            <param name="building">A building to be removed.</param>
            <returns>True if the player can remove the specified building.</returns>
        </member>
        <member name="M:Alhambra.MoveChecker.CanSwapBuildings(System.Int32,Alhambra.Building,Alhambra.Building)">
            <summary>
            Determines whether the player can swap two specified buildings.
            </summary>
            <param name="playerID">Player who wants to swap two buildings.</param>
            <param name="toAlhambra">A building to be placed in Alhambra map.</param>
            <param name="toStorage">A building to be placed in storage.</param>
            <returns>True if the player can swap two specified buildings.</returns>
        </member>
        <member name="M:Alhambra.MoveChecker.IsAnyMoveAvailable(Alhambra.Player,System.Type)">
            <summary>
            Determines if player can do the specified type of move.
            </summary>
            <param name="typeOfMove">Type of move to check.</param>
            <returns>True, if player can do the specified type of move.</returns>
        </member>
        <member name="M:Alhambra.MoveChecker.CanBuyBuilding(Alhambra.Player,Alhambra.Building,Alhambra.CardType)">
            <summary>
            Checks if player can buy a specified building using owned cards.
            </summary>
            <param name="player">A 'Alhambra.Player' </param>
            <param name="onMarket">A building to be checked to buy.</param>
            <param name="expectedType">A CardType needed to buy the specified building.</param>
            <returns>True if the specified building can be bought.</returns>
        </member>
        <member name="T:Alhambra.BuildingCC">
            <summary>
            Grafically represents a building in the Alhambra game.
            </summary>
        </member>
        <member name="P:Alhambra.BuildingCC.Movable">
            <summary>
            Indicates if this 'Alhambra.BuildingCC' is available to move.
            This is based on game rules.
            </summary>
        </member>
        <member name="P:Alhambra.BuildingCC.IsOnMarket">
            <summary>
            Indicates if this 'Alhambra.BuildingCC' custom control is on market.
            </summary>
        </member>
        <member name="P:Alhambra.BuildingCC.SelectedToChoose">
            <summary>
            Indicates if this 'Alhambra.BuildingCC' is choosen (for RebuildMove or in market).
            </summary>
        </member>
        <member name="P:Alhambra.BuildingCC.Represents">
            <summary>
            Building represented by this 'Alhambra.BuildingCC' instance.
            </summary>
        </member>
        <member name="P:Alhambra.BuildingCC.Image">
            <summary>
            Image of this 'Alhambra.BuildingCC' custom control shown as background.
            </summary>
        </member>
        <member name="P:Alhambra.BuildingCC.UnresolvedParent">
            <summary>
            Indicates parent of current building custom control which has type of UnresolvedBuildingCC, or null when parent has different type.
            </summary>
        </member>
        <member name="P:Alhambra.BuildingCC.PostponedParent">
            <summary>
            Indicates parent of current building custom control which has type of PostponedBuildingsCC, or null when parent has different type.
            </summary>
        </member>
        <member name="P:Alhambra.BuildingCC.MapParent">
            <summary>
            Indicates parent of current building custom control which has type of MapCC, or null when parent has different type.
            </summary>
        </member>
        <member name="M:Alhambra.BuildingCC.#ctor">
            <summary>
            Creates new instance of Alhambra.BuildingCC custom control.
            </summary>
        </member>
        <member name="M:Alhambra.BuildingCC.#ctor(Alhambra.Building,System.Drawing.Image)">
            <summary>
            Initializes new instance of Alhambra.BuildingCC custom control.
            </summary>
            <param name="represents">Building that is represented by control.</param>
            <param name="image">Image of building that is represented.</param>
        </member>
        <member name="M:Alhambra.BuildingCC.Clone">
            <summary>
            Creates a new instance of 'Alhambra.BuildingCC' custom control that is a copy of the current instance.
            </summary>
            <returns>A new instance of 'Alhambra.BuildingCC' custom control that is a copy of the current instance.</returns>
        </member>
        <member name="M:Alhambra.BuildingCC.ObjectOnMapCC_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles mouse down event.
            </summary>
            <param name="sender">Sender of mouse down event.</param>
            <param name="e">Mouse event arguments of the occured event.</param>
        </member>
        <member name="M:Alhambra.BuildingCC.ObjectOnMapCC_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles mouse move event.
            </summary>
            <param name="sender">Sender of mouse move event.</param>
            <param name="e">Mouse event arguments of the occured event.</param>
        </member>
        <member name="M:Alhambra.BuildingCC.ObjectOnMapCC_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles mouse up event.
            </summary>
            <param name="sender">Sender of mouse up event.</param>
            <param name="e">Mouse event arguments of the occured event.</param>
        </member>
        <member name="M:Alhambra.BuildingCC.IsInGameMap(System.Int32,System.Drawing.Point)">
            <summary>
            Indicates if the specified Point (mouse position) is in client rectangle of the player's map.
            </summary>
            <param name="playerID">Point position (mouse position) is evaluated according to the player (ID).</param>
            <param name="mousePosition">Point to be evaluated if lies in client rectangle of player's map.</param>
            <returns>True if the specified point lies in client rectangle of player's map.; otherwise false.</returns>
        </member>
        <member name="M:Alhambra.BuildingCC.IsInPostponed(System.Int32,System.Drawing.Point)">
            <summary>
            Indicates if the specified Point (mouse position) is in client rectangle of the player's postponed buildings.
            </summary>
            <param name="playerID">Point position (mouse position) is evaluated according to the player (ID).</param>
            <param name="mousePosition">Point to be evaluated if lies in client rectangle of player's postponed buildings..</param>
            <returns>True if the specified point lies in client rectangle of player's postponed buildings.; otherwise false.</returns>
        </member>
        <member name="M:Alhambra.BuildingCC.RollBackLocation">
            <summary>
            Usually called after unsuccessful drag and drop of the building control. Returns the building control to its original position.
            </summary>
        </member>
        <member name="M:Alhambra.BuildingCC.BuildingCC_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles a click on 'Alhambra.BuildingCC' custom control.
            </summary>
            <param name="sender">Sender of the event.</param>
            <param name="e">Mouse event arguments of the occured event.</param>
        </member>
        <member name="M:Alhambra.BuildingCC.SetEffect">
            <summary>
            Sets a visual effect to current control.
            </summary>
        </member>
        <member name="M:Alhambra.BuildingCC.ClearEffect">
            <summary>
            Cleares a visual effect of the current control.
            </summary>
        </member>
        <member name="M:Alhambra.BuildingCC.SetRebuildChooseEffect">
            <summary>
            Sets visual effect to current BuildingCC instance, representing selection for rebuild move.
            </summary>
        </member>
        <member name="M:Alhambra.BuildingCC.ClearRebuildChooseEffect">
            <summary>
            Clears visual effect of the current BuildingCC instance, representing selection for rebuild move.
            </summary>
        </member>
        <member name="M:Alhambra.BuildingCC.ComputeAndRoundLoc(Alhambra.Position)">
            <summary>
            Evaluates a position in pixels according to numeric position within the game.
            </summary>
            <param name="p">Position to be evaluated.</param>
            <returns>Point in pixels representing position according to number position within the game.</returns>
        </member>
        <member name="M:Alhambra.BuildingCC.GetLocation(System.Drawing.Point)">
            <summary>
            Evaluates an Alhambra.Position from point.
            </summary>
            <param name="p">Point to be evaluated.</param>
            <returns>Position representing point in pixels.</returns>
        </member>
        <member name="M:Alhambra.BuildingCC.SetNewBuilding(Alhambra.Building)">
            <summary>
            Sets a new building that is represented by current 'Alhambra.BuildingCC' custom control. Also sets 'Represents.IsInStorage' property to false.
            </summary>
            <param name="b">A building to be set as a new.</param>
        </member>
        <member name="M:Alhambra.BuildingCC.BelongsTo(Alhambra.GameForm)">
            <summary>
            Set parent GameForm of the control.
            </summary>
            <param name="gameForm">New GameForm value (instance).</param>
        </member>
        <member name="F:Alhambra.BuildingCC.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Alhambra.BuildingCC.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Alhambra.BuildingCC.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Alhambra.Player">
            <summary>
            Instance is representing one player of Alhambra game.
            </summary>
        </member>
        <member name="F:Alhambra.Player.Colors">
            <summary>
            Encapsulates all colors used for players.
            </summary>
        </member>
        <member name="P:Alhambra.Player.ID">
            <summary>
            Unique ID of the player.
            </summary>
        </member>
        <member name="P:Alhambra.Player.IsReal">
            <summary>
            True if the player is real.
            </summary>
        </member>
        <member name="P:Alhambra.Player.Color">
            <summary>
            Color of the player.
            </summary>
        </member>
        <member name="M:Alhambra.Player.#ctor(System.Int32,System.Boolean,Alhambra.IArtificialIntelligence,Alhambra.Game,System.Collections.Generic.List{Alhambra.Card},System.Collections.Generic.List{Alhambra.Building},System.Collections.Generic.List{Alhambra.Building},System.Drawing.Color)">
            <summary>
            Initializes new instance of the player.
            </summary>
            <param name="ID">Unique ID of the player.</param>
            <param name="isReal">True if player is real.</param>
            <param name="AI">If player is not real, then need reference for AI.</param>
            <param name="game">Reference for a game, where player is going to play.</param>
            <param name="cards">Initialized instance of list of player's cards.</param>
            <param name="constructed">Initialized instance of list of player's constructed buildings.</param>
            <param name="postponed">Initialized instance of list of player's postponed buildings.</param>
            <param name="color">Color of the player.</param>
        </member>
        <member name="M:Alhambra.Player.Play">
            <summary>
            If called on non-real player, uses AI and generate new move.
            </summary>
        </member>
        <member name="M:Alhambra.Player.AcceptFreeBuilding(Alhambra.Building)">
            <summary>
            Returning value that determines if calling method should wait until GUI
            events finished (real user must drag and drop building).
            </summary>
            <param name="building">Building to be accepted.</param>
            <returns>Return false if called on instance with AI player. True if called on real player instance.</returns>
        </member>
        <member name="T:Alhambra.PlayersCardsCC">
            <summary>
            Custom 'FlowLayoutPanel' that contains 'Alhambra.CardCC' controls.
            </summary>
        </member>
        <member name="P:Alhambra.PlayersCardsCC.HasFrozenCards">
            <summary>
            Determines if player can click on his cards.
            </summary>
        </member>
        <member name="M:Alhambra.PlayersCardsCC.#ctor(Alhambra.Game,System.Int32)">
            <summary>
            Initializes a new instance of 'Alhambra.PlayersCardsCC' custom control.
            </summary>
            <param name="game">Game to be associated with.</param>
            <param name="referedPlayerID">Player whose cards will be represented.</param>
        </member>
        <member name="M:Alhambra.PlayersCardsCC.RefreshData">
            <summary>
            Looks into game data and refreshes control - represents all cards which player actually owns.
            </summary>
        </member>
        <member name="M:Alhambra.PlayersCardsCC.BelongsTo(Alhambra.GameForm)">
            <summary>
            Set parent GameForm of the control.
            </summary>
            <param name="gameForm">New GameForm value (instance).</param>
        </member>
        <member name="M:Alhambra.PlayersCardsCC.PlayersCardsCC_MouseEnter(System.Object,System.EventArgs)">
            <summary>
            Sets focus of the control (this unables mouse wheel events).
            </summary>
        </member>
        <member name="F:Alhambra.PlayersCardsCC.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Alhambra.PlayersCardsCC.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Alhambra.PlayersCardsCC.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Alhambra.Position">
            <summary>
            Associates row and column coordinate.
            </summary>
        </member>
        <member name="F:Alhambra.Position.None">
            <summary>
            Non specific position. Mainly used for buildings in storage.
            </summary>
        </member>
        <member name="F:Alhambra.Position.Imaginary">
            <summary>
            Position of imaginary player's buildings.
            </summary>
        </member>
        <member name="F:Alhambra.Position.Fountain">
            <summary>
            Position of fountain building on game map.
            </summary>
        </member>
        <member name="P:Alhambra.Position.Row">
            <summary>
            A row index in the Alhambra map.
            </summary>
        </member>
        <member name="P:Alhambra.Position.Column">
            <summary>
            A column index in the Alhambra map.
            </summary>
        </member>
        <member name="M:Alhambra.Position.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of 'Alhambra.Position'.
            </summary>
            <param name="row">A row of the position in the game map.</param>
            <param name="column">A column of the position in the game map.</param>
        </member>
        <member name="M:Alhambra.Position.op_Equality(Alhambra.Position,Alhambra.Position)">
            <summary>
            Indicates whether the specified instances of Alhambra.Positions are equal.
            </summary>
            <param name="p1">First position to be compared.</param>
            <param name="p2">Second position to be compared.</param>
            <returns>True if the specified positions are equal.</returns>
        </member>
        <member name="M:Alhambra.Position.op_Inequality(Alhambra.Position,Alhambra.Position)">
            <summary>
            Indicates whether the specified instances of 'Alhambra.Positions' are not equal.
            </summary>
            <param name="p1">First position to be compared.</param>
            <param name="p2">Second position to be compared.</param>
            <returns>True if the specified positions are not equal.</returns>
        </member>
        <member name="M:Alhambra.Position.Equals(System.Object)">
            <summary>
            Indicates whether this instance and the specified object are equal.
            </summary>
            <param name="obj">An object to be compared.</param>
            <returns>True if this instance and the specified object are equal.</returns>
        </member>
        <member name="M:Alhambra.Position.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>A hash code for this instance.</returns>
        </member>
        <member name="T:Alhambra.PostponedBuildingsCC">
            <summary>
            Holds controls representing postponed buildings.
            </summary>
        </member>
        <member name="M:Alhambra.PostponedBuildingsCC.#ctor(Alhambra.GameForm,System.Windows.Forms.TabPage,System.Int32)">
            <summary>
            Initializes a new instance of PostponedBuildingsCC with settings based on parameters.
            </summary>
            <param name="gameForm">GameForm instance in which will be this control placed.</param>
            <param name="belongsTo">Tab page which will include this control.</param>
            <param name="referedPlayerID">ID of player whose buildings will be shown.</param>
        </member>
        <member name="M:Alhambra.PostponedBuildingsCC.RefreshData">
            <summary>
            Looks into a game data and refreshes child controls.
            </summary>
        </member>
        <member name="M:Alhambra.PostponedBuildingsCC.AddToPostponed(Alhambra.BuildingCC)">
            <summary>
            To list of postponed buildings in this control adds new item and evaluates its position.
            </summary>
            <param name="control">A control to be added.</param>
        </member>
        <member name="M:Alhambra.PostponedBuildingsCC.RemoveFromPostponed(Alhambra.BuildingCC)">
            <summary>
            Removes item from list of postponed buildings in this control.
            </summary>
            <param name="control">A control to be removed.</param>
        </member>
        <member name="M:Alhambra.PostponedBuildingsCC.AdjustSize">
            <summary>
            Adjusts size of control. All postponed buildings will fit into control.
            </summary>
        </member>
        <member name="M:Alhambra.PostponedBuildingsCC.AttachToTabPage(Alhambra.BuildingCC)">
            <summary>
            To the same tab page of this control, adds new control.
            </summary>
            <param name="control">Control to be added.</param>
        </member>
        <member name="F:Alhambra.PostponedBuildingsCC.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Alhambra.PostponedBuildingsCC.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Alhambra.PostponedBuildingsCC.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Alhambra.AlhambraEntry.Main">
            <summary>
            The main entry point for the application.
            </summary>
        </member>
        <member name="T:Alhambra.StartCardsForm">
            <summary>
            A form that represents information about start game cards in Alhambra game.
            </summary>
        </member>
        <member name="M:Alhambra.StartCardsForm.#ctor(Alhambra.Game)">
            <summary>
            Initializes a new instance of 'Alhambra.StartCardsForm'.
            </summary>
            <param name="game">Associated game instance.</param>
        </member>
        <member name="M:Alhambra.StartCardsForm.CreatePanelForPlayer(Alhambra.Game,System.Int32)">
            <summary>
            Creates a flow layout panel and fills it with owned cards of the
            specified player.
            </summary>
            <param name="game">Associated game.</param>
            <param name="playerID">ID of player that cards will be represented.</param>
        </member>
        <member name="F:Alhambra.StartCardsForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Alhambra.StartCardsForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Alhambra.StartCardsForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Alhambra.AlhambraRandom">
            <summary>
            Provides a random number generator for Alhambra game.
            </summary>
        </member>
        <member name="F:Alhambra.AlhambraRandom.Seed">
            <summary>
            Seed used for evolution.
            </summary>
        </member>
        <member name="F:Alhambra.AlhambraRandom.mainRandom">
            <summary>
            Main random number generator. Used for generate seeds for local 
            instances of 'System.Random' class; or used as a default random generator.
            </summary>
        </member>
        <member name="M:Alhambra.AlhambraRandom.InitializeWithSeed">
            <summary>
            Initializes main random number generator to a specific seed. Used in evolution algorithm.
            </summary>
        </member>
        <member name="M:Alhambra.AlhambraRandom.Next">
            <summary>
            Returns a nonnegative random number.
            </summary>
        </member>
        <member name="M:Alhambra.AlhambraRandom.Next(System.Int32,System.Random)">
            <summary>
            Returns a nonnegative random number less than the specified maximum; based on 
            the specified 'System.Random' instance.
            </summary>
            <param name="maxValue">The exclusive upper bound of the random number
            to be generated. maxValue must be greater than or equal to zero.</param>
            <param name="rnd">Used for generate a next number. If null,
            default random number generator is used.</param>
        </member>
        <member name="M:Alhambra.AlhambraRandom.NextDouble">
            <summary>
            Returns a random number between 0.0 and 1.0.
            </summary>
        </member>
        <member name="M:Alhambra.AlhambraRandom.NextDoubles(System.Int32)">
            <summary>
            Returns the specified count of random numbers between 0.0 and 1.0. Thread safe.
            </summary>
            <param name="count">Count of numbers to be returned.</param>
            <returns>The specified count of random numbers between 0.0 and 1.0.</returns>
        </member>
        <member name="T:Alhambra.RebuildMove">
            <summary>
            Represents a specific rebuild move in Alhambra game.
            </summary>
        </member>
        <member name="P:Alhambra.RebuildMove.ToStorage">
            <summary>
            A building to be placed in storage.
            </summary>
        </member>
        <member name="P:Alhambra.RebuildMove.ToAlhambra">
            <summary>
            A building to be placed in Alhambra.
            </summary>
        </member>
        <member name="M:Alhambra.RebuildMove.#ctor(System.Int32,Alhambra.Building,Alhambra.Building)">
            <summary>
            Initializes a new 'Alhambra.RebuildMove' instance.
            </summary>
            <param name="playerID">Player who owns the current move.</param>
            <param name="toAlhambra">A building to be placed in Alhambra or null.</param>
            <param name="toStorage">A building to be placed in storage or null.</param>
        </member>
        <member name="M:Alhambra.RebuildMove.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Alhambra.Resources.Pictures">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.Pictures.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.Pictures.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.Pictures.AlhambraIcon">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:Alhambra.Resources.Pictures.AlhambraLabel">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.Pictures.AllBuildings">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.Pictures.BlueCards">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.Pictures.Fountain">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.Pictures.GreenCards">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.Pictures.Market">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.Pictures.OrangeCards">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.Pictures.PostponedTableEmpty">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.Pictures.PostponedTablePoints">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.Pictures.ScoringCardA">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.Pictures.ScoringCardB">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.Pictures.TickIcon">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:Alhambra.Resources.Pictures.YellowCards">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:Alhambra.Resources.StringsGameForm">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.BadCardsPopUp">
            <summary>
              Looks up a localized string similar to Selected cards are not in accordance with the rules of the game..
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.BluePlayer">
            <summary>
              Looks up a localized string similar to Blue player.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.CanNotPlayMBMessage">
            <summary>
              Looks up a localized string similar to You can not play the next move. You lose it..
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.CanNotPlayMBTitle">
            <summary>
              Looks up a localized string similar to Warning.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.CanNotSaveGameMBMessage">
            <summary>
              Looks up a localized string similar to The game can&apos;t be saved right now. First, it&apos;s necessary to complete current move..
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.CanNotSaveGameMBTitle">
            <summary>
              Looks up a localized string similar to Warning.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.DirectoryExceptionSaveMessage">
            <summary>
              Looks up a localized string similar to Choosen path is not available..
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.DirectoryExceptionSaveTitle">
            <summary>
              Looks up a localized string similar to An error occured.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.EndGameGivenBuildingMBMessage">
            <summary>
              Looks up a localized string similar to In addition, the building was awarded to player: .
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.EndGameGivenBuildingMBTitle">
            <summary>
              Looks up a localized string similar to Notice.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.EndOfGame">
            <summary>
              Looks up a localized string similar to END OF THE GAME.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.Error">
            <summary>
              Looks up a localized string similar to Error.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.ExitGamePopUpMessage">
            <summary>
              Looks up a localized string similar to Are you sure?.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.ExitGamePopUpTitle">
            <summary>
              Looks up a localized string similar to Quit game.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.GainedMoveMBMessage">
            <summary>
              Looks up a localized string similar to You&apos;ve got a new extra move!.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.GainedMoveMBTitle">
            <summary>
              Looks up a localized string similar to New move gained.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.GameHasBeenSavedMessage">
            <summary>
              Looks up a localized string similar to The game has been successfully saved..
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.GameHasBeenSavedTitle">
            <summary>
              Looks up a localized string similar to Saved.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.GameMenuItem">
            <summary>
              Looks up a localized string similar to Game.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.GreenPlayer">
            <summary>
              Looks up a localized string similar to Green player.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.HelpMenuItem">
            <summary>
              Looks up a localized string similar to Help.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.ImaginaryPlayerTab">
            <summary>
              Looks up a localized string similar to Imaginary player.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.LeaveToImaginary">
            <summary>
              Looks up a localized string similar to Leave buildings to imaginary player.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.LogMenuItem">
            <summary>
              Looks up a localized string similar to Log.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.MarketTab">
            <summary>
              Looks up a localized string similar to Market.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.NewGainedPoints">
            <summary>
              Looks up a localized string similar to New gained points.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.NewGameMenuItem">
            <summary>
              Looks up a localized string similar to New Game.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.NumberOfCardsLabel">
            <summary>
              Looks up a localized string similar to Number of owned cards:.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.OrangePlayer">
            <summary>
              Looks up a localized string similar to Orange player.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.PlayedRoundsLabel">
            <summary>
              Looks up a localized string similar to Played rounds:.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.PlayerOnMoveLabel">
            <summary>
              Looks up a localized string similar to Player turn:.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.QuitGameMenuItem">
            <summary>
              Looks up a localized string similar to QuitGame.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.RedPlayer">
            <summary>
              Looks up a localized string similar to Red player.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.RemainingBuildingsLabel">
            <summary>
              Looks up a localized string similar to Remaining buildings:.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.SaveGameMenuItem">
            <summary>
              Looks up a localized string similar to Save Game.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.ScoreLabel">
            <summary>
              Looks up a localized string similar to Score:.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.ScoringCardFormInfoLabel">
            <summary>
              Looks up a localized string similar to The scoring card has been taken.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.ScoringRound">
            <summary>
              Looks up a localized string similar to Scoring Round.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.ShowHelpMenuItem">
            <summary>
              Looks up a localized string similar to Show Help.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.ShowLogMenuItem">
            <summary>
              Looks up a localized string similar to Show Log.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.ShowMapMenuItem">
            <summary>
              Looks up a localized string similar to Show Map.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.ShowNewGameStartMBMessage">
            <summary>
              Looks up a localized string similar to Do you really want to quit the current game and start new?.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.ShowNewGameStartMBTitle">
            <summary>
              Looks up a localized string similar to Start new game.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.TakeCardsButton">
            <summary>
              Looks up a localized string similar to Take Cards.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.WallsLengthLabel">
            <summary>
              Looks up a localized string similar to Length of the longest wall:.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.WhitePlayer">
            <summary>
              Looks up a localized string similar to White player.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGameForm.YellowPlayer">
            <summary>
              Looks up a localized string similar to Yellow player.
            </summary>
        </member>
        <member name="T:Alhambra.Resources.StringsGame">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.Blue">
            <summary>
              Looks up a localized string similar to Blue.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.BoughtBuilding">
            <summary>
              Looks up a localized string similar to Bought building.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.Brown">
            <summary>
              Looks up a localized string similar to Brown.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.BuildingsFromPrevMove">
            <summary>
              Looks up a localized string similar to Buildings from previous move.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.BuildingToAlhambra">
            <summary>
              Looks up a localized string similar to Building to Alhambra.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.BuildingToStorage">
            <summary>
              Looks up a localized string similar to Building to Storage.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.BuyBuilding">
            <summary>
              Looks up a localized string similar to Buy building.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.CanNotMakeMove">
            <summary>
              Looks up a localized string similar to Player can&apos;t make a new move!.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.Column">
            <summary>
              Looks up a localized string similar to Column.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.Fountain">
            <summary>
              Looks up a localized string similar to Fountain.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.GainedNewMove">
            <summary>
              Looks up a localized string similar to Gained new move.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.Green">
            <summary>
              Looks up a localized string similar to Green.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.ImaginaryPlayer">
            <summary>
              Looks up a localized string similar to Imaginary player.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.InStorage">
            <summary>
              Looks up a localized string similar to In storage.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.LeftToImaginary">
            <summary>
              Looks up a localized string similar to Left to imaginary player.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.Move">
            <summary>
              Looks up a localized string similar to Move.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.No">
            <summary>
              Looks up a localized string similar to No.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.None">
            <summary>
              Looks up a localized string similar to None.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.NoShort">
            <summary>
              Looks up a localized string similar to F.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.Orange">
            <summary>
              Looks up a localized string similar to Orange.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.Player">
            <summary>
              Looks up a localized string similar to Player.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.PointsForBuildingsSequence">
            <summary>
              Looks up a localized string similar to Total points = Blue + Red + Brown + White + Green + Violet + The longest wall.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.Position">
            <summary>
              Looks up a localized string similar to Position.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.Rebuild">
            <summary>
              Looks up a localized string similar to Rebuild.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.Red">
            <summary>
              Looks up a localized string similar to Red.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.Row">
            <summary>
              Looks up a localized string similar to Row.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.Scoring">
            <summary>
              Looks up a localized string similar to Scoring.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.ScoringRoundLog">
            <summary>
              Looks up a localized string similar to Scoring round, players are earning the following number of points:.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.StartCardsOfPlayers">
            <summary>
              Looks up a localized string similar to Start cards of players.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.TakeCard">
            <summary>
              Looks up a localized string similar to Take card.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.TakenCards">
            <summary>
              Looks up a localized string similar to Taken cards.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.TheFollowingOrder">
            <summary>
              Looks up a localized string similar to The following order is.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.Type">
            <summary>
              Looks up a localized string similar to Type.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.UsedCards">
            <summary>
              Looks up a localized string similar to Used cards.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.Value">
            <summary>
              Looks up a localized string similar to Value.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.Violet">
            <summary>
              Looks up a localized string similar to Violet.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.Walls">
            <summary>
              Looks up a localized string similar to Walls.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.White">
            <summary>
              Looks up a localized string similar to White.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.Yellow">
            <summary>
              Looks up a localized string similar to Yellow.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.Yes">
            <summary>
              Looks up a localized string similar to Yes.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsGame.YesShort">
            <summary>
              Looks up a localized string similar to T.
            </summary>
        </member>
        <member name="T:Alhambra.Resources.StringsIntroductionForm">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsIntroductionForm.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsIntroductionForm.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsIntroductionForm.AddPlayerButton">
            <summary>
              Looks up a localized string similar to Add Player.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsIntroductionForm.BackButton">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsIntroductionForm.BlueColor">
            <summary>
              Looks up a localized string similar to Blue.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsIntroductionForm.ColorOfPlayerLabelText">
            <summary>
              Looks up a localized string similar to Color:.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsIntroductionForm.Computer">
            <summary>
              Looks up a localized string similar to Computer.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsIntroductionForm.ErrorMessage">
            <summary>
              Looks up a localized string similar to Player is not set correctly.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsIntroductionForm.ErrorTitle">
            <summary>
              Looks up a localized string similar to Error.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsIntroductionForm.ExitButton">
            <summary>
              Looks up a localized string similar to Exit.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsIntroductionForm.FillBoxesButton">
            <summary>
              Looks up a localized string similar to Fill.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsIntroductionForm.GreenColor">
            <summary>
              Looks up a localized string similar to Green.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsIntroductionForm.HelpButton">
            <summary>
              Looks up a localized string similar to Help.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsIntroductionForm.Human">
            <summary>
              Looks up a localized string similar to Human.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsIntroductionForm.LoadGameButton">
            <summary>
              Looks up a localized string similar to Load Game.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsIntroductionForm.LoadGameErrorMessage">
            <summary>
              Looks up a localized string similar to Selected file is invalid..
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsIntroductionForm.LoadGameErrorTitle">
            <summary>
              Looks up a localized string similar to Error occured.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsIntroductionForm.NewGameButton">
            <summary>
              Looks up a localized string similar to New Game.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsIntroductionForm.OpenLogsButton">
            <summary>
              Looks up a localized string similar to Open Logs.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsIntroductionForm.OpenLogsError">
            <summary>
              Looks up a localized string similar to Log folder can not be opened..
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsIntroductionForm.OrangeColor">
            <summary>
              Looks up a localized string similar to Orange.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsIntroductionForm.Player0Label">
            <summary>
              Looks up a localized string similar to Player 1:.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsIntroductionForm.Player1Label">
            <summary>
              Looks up a localized string similar to Player 2:.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsIntroductionForm.Player2Label">
            <summary>
              Looks up a localized string similar to Player 3:.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsIntroductionForm.Player3Label">
            <summary>
              Looks up a localized string similar to Player 4:.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsIntroductionForm.Player4Label">
            <summary>
              Looks up a localized string similar to Player 5:.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsIntroductionForm.Player5Label">
            <summary>
              Looks up a localized string similar to Player 6:.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsIntroductionForm.ReadWeightsMBoxMessage">
            <summary>
              Looks up a localized string similar to Unable to read weights from files. Using default weights for AIs..
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsIntroductionForm.ReadWeightsMBoxTitle">
            <summary>
              Looks up a localized string similar to Information.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsIntroductionForm.RedColor">
            <summary>
              Looks up a localized string similar to Red.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsIntroductionForm.RemovePlayerButton">
            <summary>
              Looks up a localized string similar to Remove Player.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsIntroductionForm.StartGameButton">
            <summary>
              Looks up a localized string similar to Start Game.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsIntroductionForm.StartGameButtonRunning">
            <summary>
              Looks up a localized string similar to Starting the game....
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsIntroductionForm.SuccessMessage">
            <summary>
              Looks up a localized string similar to Player is set correctly.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsIntroductionForm.TabPage1">
            <summary>
              Looks up a localized string similar to Step 1.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsIntroductionForm.TabPage2">
            <summary>
              Looks up a localized string similar to Step 2.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsIntroductionForm.TypeOfPlayerLabelText">
            <summary>
              Looks up a localized string similar to Commands:.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsIntroductionForm.WhiteColor">
            <summary>
              Looks up a localized string similar to White.
            </summary>
        </member>
        <member name="P:Alhambra.Resources.StringsIntroductionForm.YellowColor">
            <summary>
              Looks up a localized string similar to Yellow.
            </summary>
        </member>
        <member name="T:Alhambra.ScoreRound">
            <summary>
            Represents type of scoring round in Alhambra game.
            </summary>
        </member>
        <member name="T:Alhambra.ScoringCardInfoForm">
            <summary>
            Form pops when the scoring card is taken or at the end of the game.
            </summary>
        </member>
        <member name="M:Alhambra.ScoringCardInfoForm.#ctor(Alhambra.Game,Alhambra.ScoreRound,System.Tuple{System.Drawing.Color,System.Int32}[])">
            <summary>
            Initializes the form. Select correct image (look up into resources) of scoring card.
            Shows the number of points for each player.
            </summary>
            <param name="game">An associated game instance.</param>
            <param name="scoreRound">Value that indicates the type of scoring round.</param>
            <param name="gainedPoints">Tuples containing Color of the player and matching number of gained points.</param>
        </member>
        <member name="M:Alhambra.ScoringCardInfoForm.OKButton_Click(System.Object,System.EventArgs)">
            <summary>
            Event raised by clicking on OKButton, closes the form.
            </summary>
        </member>
        <member name="F:Alhambra.ScoringCardInfoForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Alhambra.ScoringCardInfoForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Alhambra.ScoringCardInfoForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Alhambra.ScrollablePanelCC">
            <summary>
            Used to group collections of controls and provides a functionality for scrolling.
            </summary>
        </member>
        <member name="P:Alhambra.ScrollablePanelCC.HasFocusedMiddle">
            <summary>
            Gets a value that indicates if the current control has already been focused to middle.
            </summary>
        </member>
        <member name="M:Alhambra.ScrollablePanelCC.#ctor">
            <summary>
            Initializes a new instance of Alhambra.ScrollablePanelCC custom control.
            </summary>
        </member>
        <member name="M:Alhambra.ScrollablePanelCC.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the System.Windows.Forms.Control.MouseWheel event.
            </summary>
            <param name="e">A System.Windows.Forms.MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Alhambra.ScrollablePanelCC.FocusMiddle">
            <summary>
            Sets vertical and horizontal scroll bar to middle.
            </summary>
        </member>
        <member name="F:Alhambra.ScrollablePanelCC.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Alhambra.ScrollablePanelCC.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Alhambra.ScrollablePanelCC.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Alhambra.TakeCardMove">
            <summary>
            Represents a specific take-card move in Alhambra game.
            </summary>
        </member>
        <member name="M:Alhambra.TakeCardMove.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of Alhambra.TakeCardMove.
            </summary>
            <param name="playerID">Player who owns current move.</param>
        </member>
        <member name="M:Alhambra.TakeCardMove.#ctor(System.Int32,System.Collections.Generic.List{Alhambra.Card})">
            <summary>
            Initializes a new instance of Alhambra.TakeCardMove.
            </summary>
            <param name="playerID">Player who owns current move.</param>
            <param name="takenCards">Cards that will be taken in current move.</param>
        </member>
        <member name="M:Alhambra.TakeCardMove.Equals(System.Object)">
            <summary>
            Determines whether the specified System.Object equals the current Alhambra.TakeCardMove.
            </summary>
            <param name="obj">System.Object to be compared.</param>
            <returns>True if the specified System.Object equals the current Alhambra.TakeCardMove.</returns>
        </member>
        <member name="M:Alhambra.TakeCardMove.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
        </member>
        <member name="M:Alhambra.TakeCardMove.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Alhambra.UnresolvedBuildingsCC">
            <summary>
            Holds controls representing unresolved buildings.
            </summary>
        </member>
        <member name="F:Alhambra.UnresolvedBuildingsCC.Max">
            <summary>
            Maximum of buildings that can contain this unresolved custom control.
            </summary>
        </member>
        <member name="M:Alhambra.UnresolvedBuildingsCC.#ctor(Alhambra.Game,System.Windows.Forms.TabPage,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of UnresolvedBuildingsCC with settings based on parameters.
            </summary>
            <param name="game">Data of the game will be used for this control.</param>
            <param name="belongsTo">Tab page which will include this control.</param>
            <param name="referedPlayerID">ID of player whose buildings will be shown. Null if this control belongs to tab page with market.</param>
            
        </member>
        <member name="P:Alhambra.UnresolvedBuildingsCC.UnresolvedBuildings">
            <summary>
            Returns reference for list of BuildingCC controls.
            </summary>
        </member>
        <member name="M:Alhambra.UnresolvedBuildingsCC.RefreshData">
            <summary>
            Looks into a game data and refreshes child controls.
            </summary>
        </member>
        <member name="M:Alhambra.UnresolvedBuildingsCC.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the background of the control.
            </summary>
            <param name="pevent"></param>
        </member>
        <member name="M:Alhambra.UnresolvedBuildingsCC.AddToUnresolved(Alhambra.BuildingCC)">
            <summary>
            To list of unresolved buildings in this control adds new item and evaluates its position.
            </summary>
            <param name="control">A control to be added.</param>
        </member>
        <member name="M:Alhambra.UnresolvedBuildingsCC.RemoveFromUnresolved(Alhambra.BuildingCC)">
            <summary>
            Removes item from list of unresolved buildings in this control.
            </summary>
            <param name="control">A control to be removed.</param>
        </member>
        <member name="M:Alhambra.UnresolvedBuildingsCC.AttachToTabPage(Alhambra.BuildingCC)">
            <summary>
            To the same tab page of this control, adds new control.
            </summary>
            <param name="control">Control to be added.</param>
        </member>
        <member name="F:Alhambra.UnresolvedBuildingsCC.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Alhambra.UnresolvedBuildingsCC.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Alhambra.UnresolvedBuildingsCC.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
    </members>
</doc>
